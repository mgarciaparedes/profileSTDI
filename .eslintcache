[{"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\index.js":"1","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\MainApp.js":"2","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\AppRoute.js":"3","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\components\\History.js":"4","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\components\\AppContext.js":"5","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\CreateYourProfile\\index.js":"6","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\Login\\index.js":"7","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\EditProfile\\index.js":"8","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\ForgotPassword\\index.js":"9","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\UserName\\index.js":"10","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\components\\Helpers.js":"11","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\components\\SpinnerLoading.js":"12","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\NoDymanicForm.js":"13","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\Row.js":"14","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\ModalChangePassword.js":"15","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\SubmitAndClearDataButtons.js":"16","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\UserName\\childrenComponents\\YoutubeEmbedVideo.js":"17","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\UserName\\childrenComponents\\SocialMedia.js":"18","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\UserName\\childrenComponents\\CustomLink.js":"19","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\SendNotifications.js":"20","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\LinkToAnotherProfile.js":"21","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\index.js":"22","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\MainApp.js":"23","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\AppRoute.js":"24","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\components\\History.js":"25","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\components\\AppContext.js":"26","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\CreateYourProfile\\index.js":"27","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\EditProfile\\index.js":"28","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\Login\\index.js":"29","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\UserName\\index.js":"30","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\ForgotPassword\\index.js":"31","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\components\\Helpers.js":"32","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\components\\SpinnerLoading.js":"33","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\ModalChangePassword.js":"34","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\NoDymanicForm.js":"35","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\Row.js":"36","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\SubmitAndClearDataButtons.js":"37","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\UserName\\childrenComponents\\CustomLink.js":"38","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\UserName\\childrenComponents\\YoutubeEmbedVideo.js":"39","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\UserName\\childrenComponents\\SocialMedia.js":"40","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\SendNotifications.js":"41","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\LinkToAnotherProfile.js":"42","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\components\\SideNavigation.js":"43","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\components\\ModalChangePassword.js":"44","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\Dashboard\\index.js":"45","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\Dashboard\\index.js":"46","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\components\\SideNavigation.js":"47","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\components\\ModalChangePassword.js":"48","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\AdvancedTools\\index.js":"49","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\AdvancedTools\\childrenComponents\\SendNotifications.js":"50","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\AdvancedTools\\childrenComponents\\LinkToAnotherProfile.js":"51","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\UserName\\childrenComponents\\ProfileCarousel.js":"52","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\AdvancedTools\\childrenComponents\\GallerySetup.js":"53","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\ProfileCarousel.js":"54","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\AdvancedTools\\childrenComponents\\CustomImageSetup.js":"55","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\UserName\\childrenComponents\\CustomImage.js":"56","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\Help\\index.js":"57"},{"size":369,"mtime":1632964188417,"results":"58","hashOfConfig":"59"},{"size":323,"mtime":1633477959233,"results":"60","hashOfConfig":"59"},{"size":2007,"mtime":1635734185250,"results":"61","hashOfConfig":"59"},{"size":87,"mtime":1632964190429,"results":"62","hashOfConfig":"59"},{"size":9009,"mtime":1635606133295,"results":"63","hashOfConfig":"59"},{"size":12439,"mtime":1632964188573,"results":"64","hashOfConfig":"59"},{"size":8697,"mtime":1634508276028,"results":"65","hashOfConfig":"59"},{"size":26911,"mtime":1634418402831,"results":"66","hashOfConfig":"59"},{"size":6631,"mtime":1632964188807,"results":"67","hashOfConfig":"59"},{"size":16501,"mtime":1635211166240,"results":"68","hashOfConfig":"59"},{"size":2385,"mtime":1634417973110,"results":"69","hashOfConfig":"59"},{"size":652,"mtime":1632964190445,"results":"70","hashOfConfig":"59"},{"size":11916,"mtime":1634139449279,"results":"71","hashOfConfig":"59"},{"size":15326,"mtime":1632964188714,"results":"72","hashOfConfig":"59"},{"size":8607,"mtime":1632964188667,"results":"73","hashOfConfig":"59"},{"size":1831,"mtime":1632964188776,"results":"74","hashOfConfig":"59"},{"size":861,"mtime":1632964188964,"results":"75","hashOfConfig":"59"},{"size":20985,"mtime":1632964188932,"results":"76","hashOfConfig":"59"},{"size":1092,"mtime":1634599836170,"results":"77","hashOfConfig":"59"},{"size":1104,"mtime":1633115137522,"results":"78","hashOfConfig":"59"},{"size":6466,"mtime":1632964188636,"results":"79","hashOfConfig":"59"},{"size":369,"mtime":1632964188417,"results":"80","hashOfConfig":"81"},{"size":323,"mtime":1632964188542,"results":"82","hashOfConfig":"81"},{"size":1754,"mtime":1633396028864,"results":"83","hashOfConfig":"81"},{"size":87,"mtime":1632964190429,"results":"84","hashOfConfig":"81"},{"size":2587,"mtime":1632964190379,"results":"85","hashOfConfig":"81"},{"size":12439,"mtime":1632964188573,"results":"86","hashOfConfig":"81"},{"size":25884,"mtime":1633396863242,"results":"87","hashOfConfig":"81"},{"size":7768,"mtime":1632964188839,"results":"88","hashOfConfig":"81"},{"size":14529,"mtime":1632964188870,"results":"89","hashOfConfig":"81"},{"size":6631,"mtime":1632964188807,"results":"90","hashOfConfig":"81"},{"size":843,"mtime":1632964190398,"results":"91","hashOfConfig":"81"},{"size":652,"mtime":1632964190445,"results":"92","hashOfConfig":"81"},{"size":8607,"mtime":1632964188667,"results":"93","hashOfConfig":"81"},{"size":11907,"mtime":1633395604523,"results":"94","hashOfConfig":"81"},{"size":15326,"mtime":1632964188714,"results":"95","hashOfConfig":"81"},{"size":1831,"mtime":1632964188776,"results":"96","hashOfConfig":"81"},{"size":1092,"mtime":1632964188901,"results":"97","hashOfConfig":"81"},{"size":861,"mtime":1632964188964,"results":"98","hashOfConfig":"81"},{"size":20985,"mtime":1632964188932,"results":"99","hashOfConfig":"81"},{"size":1104,"mtime":1633115137522,"results":"100","hashOfConfig":"81"},{"size":6466,"mtime":1632964188636,"results":"101","hashOfConfig":"81"},{"size":2707,"mtime":1633396979760,"results":"102","hashOfConfig":"81"},{"size":8795,"mtime":1633395712719,"results":"103","hashOfConfig":"81"},{"size":2938,"mtime":1633401046554,"results":"104","hashOfConfig":"81"},{"size":3002,"mtime":1635734962027,"results":"105","hashOfConfig":"59"},{"size":3618,"mtime":1635734751002,"results":"106","hashOfConfig":"59"},{"size":8824,"mtime":1633819274849,"results":"107","hashOfConfig":"59"},{"size":3250,"mtime":1634495414724,"results":"108","hashOfConfig":"59"},{"size":2095,"mtime":1634217091376,"results":"109","hashOfConfig":"59"},{"size":10547,"mtime":1635564102803,"results":"110","hashOfConfig":"59"},{"size":2874,"mtime":1635520459002,"results":"111","hashOfConfig":"59"},{"size":22046,"mtime":1635573457794,"results":"112","hashOfConfig":"59"},{"size":2723,"mtime":1635520501001,"results":"113","hashOfConfig":"59"},{"size":20301,"mtime":1635733981820,"results":"114","hashOfConfig":"59"},{"size":4828,"mtime":1635734305488,"results":"115","hashOfConfig":"59"},{"size":3251,"mtime":1635734799964,"results":"116","hashOfConfig":"59"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"1s41xqw",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"119"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"119"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"119"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"119"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"119"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"119"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"119"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"119"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"119"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},"8q9bd1",{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"175"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"175"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"175"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"175"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"175"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"175"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"175"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"175"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"175"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"175"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"175"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"119"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"119"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"119"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"119"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\index.js",[],["255","256"],"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\MainApp.js",[],"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\AppRoute.js",[],"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\components\\History.js",[],"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\components\\AppContext.js",[],"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\CreateYourProfile\\index.js",["257"],"import React, { useState } from \"react\";\r\nimport { Form, InputGroup, Button, Alert } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Swal from \"sweetalert2\";\r\nimport history from \"../../../components/History\";\r\nimport LogoWhite from \"../../../assets/images/logo-white.png\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport axios from \"axios\";\r\nimport helpers from \"../../../components/Helpers\";\r\n\r\nconst { swalOffBackend } = helpers;\r\n\r\nconst schema = Yup.object({\r\n  fullName: Yup.string().required(\"Fullname is required.\"),\r\n  userName: Yup.string()\r\n    .required(\"Username is required.\")\r\n    .min(8, \"Username must have at least 8 digits.\")\r\n    .matches(/^\\S*$/, \"Username can't have spaces.\"),\r\n  email: Yup.string()\r\n    .required(\"Email is required.\")\r\n    .email(\"Invalid email format.\"),\r\n  serialNumber: Yup.string()\r\n    .required(\"Serial Number is required.\"),\r\n    //.matches(/^[1-9]+[0-9]*$/, \"Only numbers.\"),\r\n  password: Yup.string()\r\n    .required(\"Password is required.\")\r\n    .min(8, \"PAssword must have at least 8 digits.\")\r\n    .matches(/^\\S*$/, \"Password can't have spaces.\"),\r\n  passwordConfirm: Yup.string()\r\n    .required(\"Confirm password is required.\")\r\n    .when(\"password\", {\r\n      is: (val) => (val && val.length > 0 ? true : false),\r\n      then: Yup.string().oneOf(\r\n        [Yup.ref(\"password\")],\r\n        \"Both password need to be the same\"\r\n      ),\r\n    }),\r\n});\r\n\r\nexport const CreateYourProfile = () => {\r\n  const [disabledButton, setDisabledButton] = useState(false);\r\n\r\n  const onSubmit = (event) => {\r\n    setDisabledButton(true);\r\n\r\n    const { userName, fullName, email, serialNumber, password } = event;\r\n\r\n    const payload = {\r\n      name: fullName,\r\n      username: userName,\r\n      email: email,\r\n      serialNumber: serialNumber,\r\n      password: password,\r\n    };\r\n\r\n    axios\r\n      .post(`/users/saveNewUser`, payload)\r\n      .then((res) => {\r\n        setDisabledButton(false);\r\n        const { ok, msg } = res.data;\r\n        if (ok && msg === \"User created succesfully.\") {\r\n          Swal.fire({\r\n            title: \"Success\",\r\n            text: \"Your profile account have been created.\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Ok\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              history.push(\"/login\");\r\n            } else {\r\n              history.push(\"/login\");\r\n            }\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        /*Sí los servicios están OFF, retornamos este swal*/\r\n        if (e.response === undefined) {\r\n          swalOffBackend();\r\n          setDisabledButton(false);\r\n          return 1;\r\n        }\r\n\r\n        /*Si ocurre algo en el request, retoramos esto*/\r\n        const { msg, ok } = e.response.data;\r\n        if (!ok) {\r\n          Swal.fire({\r\n            title: \"Error\",\r\n            text: msg,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Try again\",\r\n          });\r\n          setDisabledButton(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-login\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <div className=\"card-sign-up\">\r\n            <div className=\"card-header\">\r\n              <h3 className=\"text-center\">Create your profile</h3>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <Formik\r\n                validationSchema={schema}\r\n                // onSubmit={(values, { resetForm }) => {\r\n                //   onSubmit(values);\r\n                //   resetForm({ values: null });\r\n                // }}\r\n                onSubmit={onSubmit}\r\n                initialValues={{\r\n                  fullName: \"\",\r\n                  userName: \"\",\r\n                  email: \"\",\r\n                  serialNumber: \"\",\r\n                  password: \"\",\r\n                  passwordConfirm: \"\",\r\n                }}\r\n              >\r\n                {({\r\n                  handleSubmit,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  setFieldValue,\r\n                  values,\r\n                  touched,\r\n                  isValid,\r\n                  errors,\r\n                }) => (\r\n                  <Form\r\n                    onSubmit={handleSubmit}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                    name=\"addServiceData\"\r\n                    id=\"addServiceData\"\r\n                  >\r\n                    <InputGroup className=\"mb-2\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <Icon.PersonFill />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Type here your full name\"\r\n                        name=\"fullName\"\r\n                        value={values.fullName}\r\n                        onChange={handleChange}\r\n                        isValid={!!touched.fullName && !errors.fullName}\r\n                        isInvalid={!!errors.fullName && !!touched.fullName}\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.fullName}\r\n                      </Form.Control.Feedback>\r\n                    </InputGroup>\r\n\r\n                    <InputGroup className=\"mb-2\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          profile.stdicompany.com/\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"username\"\r\n                        name=\"userName\"\r\n                        value={values.userName}\r\n                        onChange={handleChange}\r\n                        isValid={!!touched.userName && !errors.userName}\r\n                        isInvalid={!!errors.userName && !!touched.userName}\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.userName}\r\n                      </Form.Control.Feedback>\r\n                    </InputGroup>\r\n\r\n                    <InputGroup className=\"mb-2\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <Icon.At />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Example: johndoe@example.com\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleChange}\r\n                        isValid={!!touched.email && !errors.email}\r\n                        isInvalid={!!errors.email && !!touched.email}\r\n                        className=\"lowercase\"\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.email}\r\n                      </Form.Control.Feedback>\r\n                    </InputGroup>\r\n\r\n                    <InputGroup className=\"mb-2\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <Icon.Upc />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Type the serial number\"\r\n                        name=\"serialNumber\"\r\n                        value={values.serialNumber}\r\n                        onChange={handleChange}\r\n                        isValid={!!touched.serialNumber && !errors.serialNumber}\r\n                        isInvalid={\r\n                          !!errors.serialNumber && !!touched.serialNumber\r\n                        }\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.serialNumber}\r\n                      </Form.Control.Feedback>\r\n                    </InputGroup>\r\n\r\n                    <InputGroup className=\"mb-2\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <Icon.KeyFill />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Enter your password\"\r\n                        name=\"password\"\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                        isValid={!!touched.password && !errors.password}\r\n                        isInvalid={!!errors.password && !!touched.password}\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.password}\r\n                      </Form.Control.Feedback>\r\n                    </InputGroup>\r\n\r\n                    <InputGroup className=\"mb-2\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <Icon.KeyFill />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm your password\"\r\n                        name=\"passwordConfirm\"\r\n                        value={values.passwordConfirm}\r\n                        onChange={handleChange}\r\n                        isValid={\r\n                          !!touched.passwordConfirm && !errors.passwordConfirm\r\n                        }\r\n                        isInvalid={\r\n                          !!errors.passwordConfirm && !!touched.passwordConfirm\r\n                        }\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.passwordConfirm}\r\n                      </Form.Control.Feedback>\r\n                    </InputGroup>\r\n\r\n                    <InputGroup className=\"mb-2\">\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"primary\"\r\n                        disabled={disabledButton === true}\r\n                        block\r\n                      >\r\n                        <div className=\"d-flex d-inline-block justify-content-center\">\r\n                          <span\r\n                            className=\"spinner-border spinner-border-sm mt-1 mr-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                              display:\r\n                                disabledButton === true\r\n                                  ? \"inline-block\"\r\n                                  : \"none\",\r\n                            }}\r\n                            aria-hidden=\"true\"\r\n                          ></span>\r\n                          {disabledButton === true\r\n                            ? \" Loading, please wait...\"\r\n                            : \"Create Account\"}\r\n                        </div>\r\n                      </Button>\r\n                    </InputGroup>\r\n\r\n                    <Alert variant=\"info\">\r\n                      <Icon.ExclamationTriangleFill /> By registering you agree\r\n                      to our <a href=\"/\">privacy policy and terms of service</a>\r\n                      .\r\n                    </Alert>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <div className=\"d-flex justify-content-center text-white\">\r\n                Already have an account? &nbsp;\r\n                <a href=\"/login\">Click here</a>\r\n                &nbsp; to login.\r\n              </div>\r\n              <div className=\"d-flex justify-content-center text-white\">\r\n                Don't have an account? &nbsp;\r\n                <a href=\"/create-profile\"> Sign Up</a>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <a href=\"/\">Privacy Policy and Terms of Service</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\Login\\index.js",["258"],"import React, { useState, useContext } from \"react\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Swal from \"sweetalert2\";\r\nimport history from \"../../../components/History\";\r\nimport LogoWhite from \"../../../assets/images/logo-white.png\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport axios from \"axios\";\r\nimport helpers from \"../../../components/Helpers\";\r\nimport { AppContext } from \"../../../components/AppContext\";\r\n\r\nconst { swalOffBackend } = helpers;\r\n\r\nconst schema = Yup.object({\r\n  email: Yup.string()\r\n    .required(\"Email is required\")\r\n    .email(\"Incorrect email format\"),\r\n  password: Yup.string()\r\n    .required(\"Password is required\")\r\n    .matches(/^\\S*$/, \"Password can't have spaces.\"),\r\n});\r\n\r\nexport const Login = () => {\r\n  const { loginContext } = useContext(AppContext);\r\n\r\n  const [disabledButton, setDisabledButton] = useState(false);\r\n\r\n  const onSubmit = (event) => {\r\n    const { email, password } = event;\r\n\r\n    setDisabledButton(true);\r\n\r\n    const payload = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    axios\r\n      .post(`/auth/login`, payload)\r\n      .then((res) => {\r\n        const { ok, msg, token, name, userid } = res.data;\r\n        //Capturamos el token y lo dejamos en la cabecera\r\n        axios.defaults.headers.common[\"x-token\"] = res.data.token;\r\n\r\n        /*Sí el login es ok, loguea*/\r\n        if (ok && msg === \"login\") {\r\n          axios.get(`/users/getProfileUserData`).then((res2) => {\r\n            const {\r\n              ok,\r\n              msg,\r\n              serialNumber,\r\n              username,\r\n              email,\r\n              data,\r\n              gallery,\r\n              customImage,\r\n            } = res2.data;\r\n            /*Sí el login es ok, loguea*/\r\n            if (ok && msg === \"User data found.\") {\r\n              setDisabledButton(false);\r\n\r\n              const json = {\r\n                authenticated: true,\r\n                user: name,\r\n                token: token,\r\n                email: email,\r\n                serialNumber: serialNumber,\r\n                username: username,\r\n                profileData: data,\r\n                galleryImages:\r\n                  gallery && gallery.galleryImages\r\n                    ? gallery.galleryImages\r\n                    : null,\r\n                galleryActive:\r\n                  gallery && gallery.galleryActive\r\n                    ? gallery.galleryActive\r\n                    : null,\r\n                customImage: customImage ? customImage : null,\r\n                sendNotifications: data.sendNotifications,\r\n                isLinked: data.isLinked,\r\n                usernameLinked: data.usernameLinked,\r\n              };\r\n\r\n              loginContext(json);\r\n\r\n              history.push(\"/dashboard\");\r\n            }\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        /*Sí los servicios están OFF, retornamos este swal*/\r\n        if (e.response === undefined) {\r\n          swalOffBackend();\r\n          setDisabledButton(false);\r\n          return 1;\r\n        }\r\n\r\n        /*Si ocurre algo en el request, retoramos esto*/\r\n        const { msg, ok } = e.response.data;\r\n        if (!ok) {\r\n          Swal.fire({\r\n            title: \"Error\",\r\n            text: msg,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Try again\",\r\n          });\r\n        }\r\n\r\n        setDisabledButton(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-login\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <div className=\"card-login\">\r\n            <div className=\"card-header\">\r\n              <h3>Sign in</h3>\r\n              <div className=\"d-flex justify-content-end social_icon\">\r\n                <img className=\"logo-login\" src={LogoWhite} alt=\"Logo\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <Formik\r\n                validationSchema={schema}\r\n                // onSubmit={(values, { resetForm }) => {\r\n                //   onSubmit(values);\r\n                //   resetForm({ values: null });\r\n                // }}\r\n                onSubmit={onSubmit}\r\n                initialValues={{\r\n                  //email: \"miguelgarciaparedes22@gmail.com\",\r\n                  //password: \"12345678\",\r\n                  email: \"\",\r\n                  password: \"\",\r\n                }}\r\n              >\r\n                {({\r\n                  handleSubmit,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  setFieldValue,\r\n                  values,\r\n                  touched,\r\n                  isValid,\r\n                  errors,\r\n                }) => (\r\n                  <Form\r\n                    onSubmit={handleSubmit}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                    name=\"addServiceData\"\r\n                    id=\"addServiceData\"\r\n                  >\r\n                    <InputGroup className=\"mb-2\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <Icon.PersonBoundingBox />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Example: johndoe@example.com\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleChange}\r\n                        isValid={!!touched.email && !errors.email}\r\n                        isInvalid={!!errors.email && !!touched.email}\r\n                        className=\"lowercase\"\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.email}\r\n                      </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                    <InputGroup className=\"mb-2\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <Icon.KeyFill />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Enter your password\"\r\n                        name=\"password\"\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                        isValid={!!touched.password && !errors.password}\r\n                        isInvalid={!!errors.password && !!touched.password}\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.password}\r\n                      </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                    <InputGroup>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"primary\"\r\n                        disabled={disabledButton === true}\r\n                        block\r\n                      >\r\n                        <div className=\"d-flex d-inline-block justify-content-center\">\r\n                          <span\r\n                            className=\"spinner-border spinner-border-sm mt-1 mr-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                              display:\r\n                                disabledButton === true\r\n                                  ? \"inline-block\"\r\n                                  : \"none\",\r\n                            }}\r\n                            aria-hidden=\"true\"\r\n                          ></span>\r\n                          {disabledButton === true\r\n                            ? \" Loading, please wait...\"\r\n                            : \"Login\"}\r\n                        </div>\r\n                      </Button>\r\n                    </InputGroup>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <div className=\"d-flex justify-content-center text-white\">\r\n                Don't have an account? &nbsp;\r\n                <a href=\"/create-profile\"> Sign Up</a>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <a href=\"/forgot-password\">Forgot your password?</a>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <a href=\"/\">Privacy Policy and Terms of Service</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\EditProfile\\index.js",["259","260","261","262","263","264","265","266","267"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { Button, Overlay, Tooltip } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport userImage from \"../../../assets/images/default-user-image.png\";\r\nimport history from \"../../../components/History\";\r\nimport BannerImage from \"../../../assets/images/no-banner.jpg\";\r\nimport { AppContext } from \"../../../components/AppContext\";\r\nimport helpers from \"../../../components/Helpers\";\r\nimport axios from \"axios\";\r\n\r\n//Componentes Reusables\r\nimport { SpinnerLoading } from \"../../../components/SpinnerLoading\";\r\nimport { SideNavigation } from \"../../../components/SideNavigation\";\r\n\r\n//Componentes Hijos\r\n//import ModalChangePassword from \"./childrenComponents/ModalChangePassword\";\r\nimport NoDymanicForm from \"./childrenComponents/NoDymanicForm\";\r\nimport Row from \"./childrenComponents/Row\";\r\nimport { ProfileCarousel } from \"./childrenComponents/ProfileCarousel\";\r\n\r\n//Ícono\r\nimport CustomURLIcon from \"../../../assets/svg/customurl.svg\";\r\n\r\nimport FormData from \"form-data\";\r\nimport SubmitAndClearDataButtons from \"./childrenComponents/SubmitAndClearDataButtons\";\r\n\r\nconst QRCode = require(\"qrcode.react\");\r\n\r\nconst { convertStringWithPlus, copyToClipboard, shareLink } = helpers;\r\n\r\nexport const EditProfile = () => {\r\n  const [existentProfile, setExistentProfile] = useState(true);\r\n  const [nameState, setNameState] = useState(\"\");\r\n  const [bioState, setBioState] = useState(\"\");\r\n  const [loadingProfileData, setLoadingProfileData] = useState(true); //Animación cargando datos de perfil\r\n  const [sessionOver, setSessionOver] = useState(false);\r\n  const [profileData, setProfileData] = useState([]); //Este de momento no se usa\r\n  const [isLinked, setIsLinked] = useState(false);\r\n  const [usernameLinked, setUsernameLinked] = useState(\"\");\r\n\r\n  /*Con estos estados manejamos cuando adjuntamos una imagen la convertimos en base64 para pintarlas\r\n   *en la vista. También cuando el servicio(getProfileUserData) se encarga de mostrar\r\n   *la ruta de la imagen*/\r\n  const [base64ImgProfile, setBase64ImgProfile] = useState(\"\");\r\n  const [base64ImgBanner, setBase64ImgBanner] = useState(\"\");\r\n  const [gallery, setGallery] = useState(\"\");\r\n\r\n  // const [sendNotifications, setSendNotifications] = useState(false);\r\n  const [disabledButton, setDisabledButton] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(null);\r\n\r\n  //para enviar al módulo de changePassword\r\n  const [name, setName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [serialNumber, setSerialNumber] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  /*Estas variables la usamos para manejar los estados de la foto y el perfil que vamos a subir.\r\n  No van en formato64. El mismo javascrip se encarga de mandarlos en binario para que sean leídas en\r\n  el backend.*/\r\n  const [imgProfileToUpload, setImgProfileToUpload] = useState(\"\");\r\n  const [imgBannerToUpload, setImgBannerToUpload] = useState(\"\");\r\n\r\n  const { objLogin, logoutContext } = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/users/getProfileUserData\")\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.ok === false) {\r\n          setExistentProfile(false); //Diferenciar si se le pega al servicio save\r\n          setLoadingProfileData(false);\r\n          //Esto pasa en caso de que exista el usuario registrado pero no tenga ningún perfil asociado\r\n          //tiene que guardar el username para wue al momento de revisar su QR, copiar el link o al terminar\r\n          //de hacer su primer registro se pueda redirigir hacia su username\r\n          setUsername(res.data.username);\r\n          Swal.fire({\r\n            title: \"Hi, welcome to STDI profiles\",\r\n            text: \"Save your data to see your profile ;)\",\r\n            icon: \"info\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n\r\n          setBase64ImgProfile(userImage);\r\n          setBase64ImgBanner(BannerImage);\r\n        } else {\r\n          setExistentProfile(true); //Diferenciar si se le pega al servicio update\r\n          setNameState(res.data.data.profileFullName);\r\n          setBioState(res.data.data.profileBio);\r\n          setUsername(res.data.username);\r\n          setProfileData(res.data.data.socialMedia);\r\n          setIsLinked(res.data.data.isLinked);\r\n          setUsernameLinked(res.data.data.usernameLinked);\r\n          setGallery(res.data.gallery);\r\n\r\n          /*De no estar guardada la ruta de la imagen, mostramos un icono en fondo gris*/\r\n          if (res.data.data.base64ProfilePhoto === \"\") {\r\n            setBase64ImgProfile(userImage);\r\n          } else {\r\n            /*Sí el registro viene con algo, lo pintamos con la key de s3 de amazon*/\r\n            setBase64ImgProfile(\r\n              `${process.env.REACT_APP_API_URL}/render/image/${res.data.data.base64ProfilePhoto}`\r\n            );\r\n          }\r\n\r\n          /*Aplicamos la misma validación, verificamos que haya sido guarda la ruta del banner en S3.*/\r\n          if (res.data.data.base64BannerPhoto === \"\") {\r\n            setBase64ImgBanner(BannerImage);\r\n          } else {\r\n            /*Sí ya hay una key, pintamos el banner adjuntado y guardado en DB*/\r\n            setBase64ImgBanner(\r\n              `${process.env.REACT_APP_API_URL}/render/image/${res.data.data.base64BannerPhoto}`\r\n            );\r\n          }\r\n\r\n          setRows(res.data.data.socialMedia); //Aquí guardo si es que el profile tiene alguna red social\r\n          setLoadingProfileData(false);\r\n          //setSendNotifications(res.data.data.sendNotifications);\r\n\r\n          //para enviar al ChangePassword\r\n          setName(res.data.name);\r\n          setEmail(res.data.email);\r\n          setSerialNumber(res.data.serialNumber);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setExistentProfile(false);\r\n        setLoadingProfileData(false);\r\n        setSessionOver(true);\r\n        Swal.fire({\r\n          title: \"This session is over\",\r\n          text: \"Please login again\",\r\n          icon: \"error\",\r\n          confirmButtonText: \"OK\",\r\n        }).then((result) => {\r\n          /* Read more about isConfirmed, isDenied below */\r\n          if (result.isConfirmed) {\r\n            history.push(\"/\");\r\n          } else {\r\n            history.push(\"/\");\r\n          }\r\n        });\r\n      });\r\n    console.log(\"Se ejecuta EditProfile\");\r\n  }, []);\r\n\r\n  //Esta función va a guardar cada vez que se cambie algo en los campos de RRSS\r\n  const handleOnChange = (index, name, value) => {\r\n    const copyRows = [...rows];\r\n    copyRows[index] = {\r\n      ...copyRows[index],\r\n      [name]: value,\r\n    };\r\n    setRows(copyRows);\r\n  };\r\n\r\n  //Declaro el estado del arreglo inicial que va a guardar las RRSS seleccionadas\r\n  const [rows, setRows] = useState([]);\r\n\r\n  //Función que guarda una fila nueva cada vez que se seleccione una opción nueva de RRSS\r\n  const handleOnAdd = (e) => {\r\n    //Aquí valido que si eligen choose your media no se agregue nada\r\n    if (e.target.value !== \"\") {\r\n      //el campo CustomURL va a guardar otro dato -> el nombre del link\r\n      //Entonces dependiendo de la red social elegida digo si va a guardar ese dato extra o no\r\n      if (e.target.value === \"CustomURL\") {\r\n        setRows(\r\n          rows.concat({\r\n            socialNetwork: e.target.value,\r\n            profile: \"\",\r\n            linkName: \"\",\r\n          })\r\n        );\r\n      } else {\r\n        setRows(\r\n          rows.concat({\r\n            socialNetwork: e.target.value,\r\n            profile: \"\",\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  //Función que elimina una fila determinada.\r\n  const handleOnRemove = (index) => {\r\n    const copyRows = [...rows];\r\n    copyRows.splice(index, 1);\r\n    setRows(copyRows);\r\n  };\r\n\r\n  const handleNameChange = (e) => {\r\n    setNameState(e.target.value);\r\n  };\r\n\r\n  const handleBioChange = (e) => {\r\n    setBioState(e.target.value);\r\n  };\r\n\r\n  //Función que convierte imágenes a base64\r\n  const reader = new FileReader();\r\n  reader.onloadend = () => {\r\n    // use a regex to remove data url part\r\n    const base64String = reader.result.replace(\"data:\", \"\").replace(/^.+,/, \"\");\r\n\r\n    setBase64ImgProfile(`data:image/jpeg;base64,${base64String}`);\r\n  };\r\n\r\n  const reader2 = new FileReader();\r\n  reader2.onloadend = () => {\r\n    // use a regex to remove data url part\r\n    const base64String2 = reader2.result\r\n      .replace(\"data:\", \"\")\r\n      .replace(/^.+,/, \"\");\r\n\r\n    setBase64ImgBanner(`data:image/jpeg;base64,${base64String2}`);\r\n  };\r\n\r\n  //Función que borra todas las rrss del perfil\r\n  const clearData = () => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"If you clear your profile it will be empty.\",\r\n      icon: \"info\",\r\n      confirmButtonText: \"Yes, wipe out\",\r\n      showCancelButton: true,\r\n      cancelButtonText: \"No, go back\",\r\n    }).then((result) => {\r\n      /* Read more about isConfirmed, isDenied below */\r\n      if (result.isConfirmed) {\r\n        setRows([]);\r\n        setNameState(\"\");\r\n        setBioState(\"\");\r\n        setBase64ImgProfile(userImage);\r\n        setBase64ImgBanner(BannerImage);\r\n      }\r\n    });\r\n  };\r\n\r\n  const noBlankSpaces = () => {\r\n    return rows.some(function (el) {\r\n      return el.profile === \"\";\r\n    });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    setDisabledButton(true);\r\n    console.log(rows);\r\n    const checkFields = noBlankSpaces();\r\n\r\n    /*const payload = {\r\n      profileFullName: nameState,\r\n      base64ProfilePhoto: \"\",\r\n      base64BannerPhoto: \"\",\r\n      profileBio: bioState,\r\n      socialMedia: rows,\r\n      sendNotifications: sendNotifications,\r\n      isLinked: isLinked,\r\n      usernameLinked: usernameLinked,\r\n    };*/\r\n\r\n    /*Debemos mandar el arreglo de objetos de redes sociales\r\n     * como un string y en el backend, lo convertimos a JSON con JSON.parse()*/\r\n    const rowsSocialMedia = JSON.stringify(rows);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"profileFullName\", nameState);\r\n    formData.append(\"base64ProfilePhoto\", imgProfileToUpload);\r\n    formData.append(\"base64BannerPhoto\", imgBannerToUpload);\r\n    formData.append(\"profileBio\", bioState);\r\n    formData.append(\"socialMedia\", rowsSocialMedia);\r\n    formData.append(\"sendNotifications\", objLogin.sendNotifications);\r\n    formData.append(\"isLinked\", objLogin.isLinked);\r\n    formData.append(\"usernameLinked\", objLogin.usernameLinked);\r\n\r\n    if (checkFields === true) {\r\n      setDisabledButton(false);\r\n\r\n      Swal.fire({\r\n        title: \"Please check your fields\",\r\n        text: \"Can't save a social network without profile\",\r\n        icon: \"info\",\r\n        confirmButtonText: \"OK\",\r\n      });\r\n    } else {\r\n      if (nameState === \"\") {\r\n        setDisabledButton(false);\r\n        Swal.fire({\r\n          title: \"Profile Fullname is required\",\r\n          text: \"We need at least this information to save your profile\",\r\n          icon: \"info\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n      } else {\r\n        if (existentProfile === false) {\r\n          //Si existentProfile es false, quiere decir que no existe un perfil guardado para este usuario\r\n          //Eso quiere decir que le pega al servicio de saveProfileUserData\r\n          axios\r\n            .post(\"/users/saveProfileUserData\", formData)\r\n            .then((res) => {\r\n              const { ok, msg } = res.data;\r\n\r\n              if (ok === true) {\r\n                setDisabledButton(false);\r\n                //Activar al usuario para que pueda modificar luego de la primera inserción en la BBDD\r\n                setExistentProfile(true);\r\n                Swal.fire({\r\n                  title: \"Great! This is your first profile.\",\r\n                  text: \"Check your profile ;)\",\r\n                  icon: \"success\",\r\n                  confirmButtonText: \"Go to check profile\",\r\n                  showCancelButton: true,\r\n                  cancelButtonText: \"No, thats ok\",\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window\r\n                      .open(\r\n                        \"https://profile.stdicompany.com/\" + username,\r\n                        \"_blank\"\r\n                      )\r\n                      .focus();\r\n                  }\r\n                });\r\n              } else {\r\n                setDisabledButton(false);\r\n                Swal.fire({\r\n                  title: \"Sorry. Try again please! 1\",\r\n                  text: msg,\r\n                  icon: \"error\",\r\n                  confirmButtonText: \"OK\",\r\n                });\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              const { msg } = error.response.data;\r\n              setDisabledButton(false);\r\n              Swal.fire({\r\n                title: \"Sorry. There was a crash\",\r\n                text: msg ? msg : \"Please close this session and login again.\",\r\n                icon: \"error\",\r\n                confirmButtonText: \"OK\",\r\n              });\r\n            });\r\n        } else {\r\n          //Si existentProfile es true, quiere decir que no existe un perfil guardado para este usuario\r\n          //Eso quiere decir que le pega al servicio de updateProfileUserData\r\n          axios\r\n            .post(\"/users/updateProfileUserData\", formData, {\r\n              headers: {\r\n                \"content-type\": \"multipart/form-data\",\r\n              },\r\n            })\r\n            .then((res) => {\r\n              const { ok, msg } = res.data;\r\n\r\n              if (ok === true) {\r\n                setDisabledButton(false);\r\n                Swal.fire({\r\n                  title: \"Changes have been updated\",\r\n                  text: \"Check your profile ;)\",\r\n                  icon: \"success\",\r\n                  confirmButtonText: \"Go to check profile\",\r\n                  showCancelButton: true,\r\n                  cancelButtonText: \"No, thats ok\",\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window\r\n                      .open(\r\n                        \"https://profile.stdicompany.com/\" + username,\r\n                        \"_blank\"\r\n                      )\r\n                      .focus();\r\n                  }\r\n                });\r\n              } else {\r\n                setDisabledButton(false);\r\n                Swal.fire({\r\n                  title: \"Sorry. Try again please!\",\r\n                  text: msg,\r\n                  icon: \"error\",\r\n                  confirmButtonText: \"OK\",\r\n                });\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              setDisabledButton(false);\r\n              Swal.fire({\r\n                title: \"Sorry. There was a crash\",\r\n                text: \"Please close this session and login again.\",\r\n                icon: \"error\",\r\n                confirmButtonText: \"OK\",\r\n              });\r\n            });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loadingProfileData || sessionOver ? (\r\n        <SpinnerLoading />\r\n      ) : (\r\n        <div className=\"container mt-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12 d-flex justify-content-end\">\r\n              <div className=\"text-white mt-2\">\r\n                {objLogin.username}&nbsp;&nbsp;\r\n              </div>\r\n              {/*<ModalChangePassword\r\n                name={name}\r\n                username={username}\r\n                serialNumber={serialNumber}\r\n                email={email}\r\n              />\r\n              &nbsp;&nbsp;*/}\r\n              <SideNavigation\r\n                // setSendNotifications={setSendNotifications}\r\n                // sendNotifications={sendNotifications}\r\n                // isLinked={isLinked}\r\n                // usernameLinked={usernameLinked}\r\n                // setIsLinked={setIsLinked}\r\n              />\r\n              {/*&nbsp;&nbsp;\r\n              <Button\r\n                variant=\"danger\"\r\n                onClick={() => {\r\n                  //history.push(\"/login\");\r\n                  logoutContext();\r\n                }}\r\n              >\r\n                <Icon.Power size={20} />\r\n              </Button>*/}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-5 row\">\r\n            <div\r\n              className=\"\r\n              col-sm-6 col-md-6\"\r\n            >\r\n              {/*Comienzo de parte de formulario no dinámico nombre, bio, imágenes*/}\r\n              <NoDymanicForm\r\n                nameState={nameState}\r\n                bioState={bioState}\r\n                // sendNotifications={sendNotifications}\r\n                // setSendNotifications={setSendNotifications}\r\n                username={username}\r\n                // isLinked={isLinked}\r\n                // setIsLinked={setIsLinked}\r\n                // usernameLinked={usernameLinked}\r\n                disabledButton={disabledButton}\r\n                reader={reader}\r\n                reader2={reader2}\r\n                onSubmit={onSubmit}\r\n                handleOnAdd={handleOnAdd}\r\n                handleNameChange={handleNameChange}\r\n                handleBioChange={handleBioChange}\r\n                setBase64ImgBanner={setBase64ImgBanner}\r\n                clearData={clearData}\r\n                setImgProfileToUpload={setImgProfileToUpload}\r\n                setImgBannerToUpload={setImgBannerToUpload}\r\n              />\r\n\r\n              {/*Comienzo de sección en donde se van mostrando los campos para escribir las rrss*/}\r\n              <div>\r\n                {rows.length > 0 ? <hr className=\"hr\" /> : null}\r\n                {rows.map((row, index) => (\r\n                  <Row\r\n                    {...row}\r\n                    onChange={(name, value) => {\r\n                      handleOnChange(index, name, value);\r\n                    }}\r\n                    onRemove={() => handleOnRemove(index)}\r\n                    key={index}\r\n                    view={1}\r\n                  />\r\n                ))}\r\n              </div>\r\n\r\n              <SubmitAndClearDataButtons\r\n                disabledButton={disabledButton}\r\n                clearData={clearData}\r\n                onSubmit={onSubmit}\r\n              />\r\n            </div>\r\n\r\n            {/*Columna en donde se van mostrando los cambios*/}\r\n            <div className=\"col-sm-6\">\r\n              <div className=\"d-md-none\">\r\n                <hr className=\"hr\" />\r\n              </div>\r\n              <div className=\"bg-white\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <img\r\n                      src={base64ImgBanner}\r\n                      style={{\r\n                        height: \"250px\",\r\n                      }}\r\n                      className=\"w-100\"\r\n                      alt=\"backgroundImageProfile\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12 d-flex justify-content-center\">\r\n                    <img\r\n                      src={base64ImgProfile}\r\n                      className=\"rounded-circle img-profile\"\r\n                      alt=\"ProfilePhoto\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-sm-12 d-flex justify-content-center\">\r\n                    <label className=\"form-label mt-3\">{nameState}</label>\r\n                  </div>\r\n                  <div className=\"col-sm-12 d-flex justify-content-center pre-wrap\">\r\n                    <label className=\"pt-1 text-justify\">{bioState}</label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    {rows.map((elemento, index) => (\r\n                      <div key={index}>\r\n                        {elemento.socialNetwork === \"Embed Youtube Video\" ? (\r\n                          <div className=\"p-3 w100 d-flex justify-content-center\">\r\n                            <iframe\r\n                              width=\"560\"\r\n                              height=\"315\"\r\n                              src={\r\n                                \"https://www.youtube.com/embed/\" +\r\n                                elemento.profile.substr(17)\r\n                              }\r\n                              title=\"YouTube video player\"\r\n                              frameBorder=\"0\"\r\n                              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                              allowFullScreen\r\n                            ></iframe>\r\n                          </div>\r\n                        ) : null}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row p-3 d-flex justify-content-around\">\r\n                  {\r\n                    //Aquí es en donde muestro cómo va quedando el perfil\r\n                    //Si te fijas mapeo el mismo arreglo rows pero lo único\r\n                    //que cambia es el view=2, con esto le digo que me muestre\r\n                    //la vista determinada para ver en tiempo real como se va\r\n                    //mostrando el perfil\r\n                    //en este tipo de vista no se puede modificar nada\r\n                  }\r\n                  {loadingProfileData === true ? (\r\n                    <div className=\"d-flex d-inline-block justify-content-center\">\r\n                      <span\r\n                        className=\"spinner-grow spinner-grow-sm mt-1 mr-2\"\r\n                        role=\"status\"\r\n                        style={{\r\n                          display: \"inlineBlock\",\r\n                        }}\r\n                        aria-hidden=\"true\"\r\n                      ></span>\r\n                      Loading...\r\n                    </div>\r\n                  ) : (\r\n                    rows.map((row, index) => (\r\n                      <Row\r\n                        {...row}\r\n                        onChange={(name, value) => {\r\n                          handleOnChange(index, name, value);\r\n                        }}\r\n                        onRemove={() => handleOnRemove(index)}\r\n                        key={index}\r\n                        view={2}\r\n                        convertStringWithPlus={convertStringWithPlus}\r\n                      />\r\n                    ))\r\n                  )}\r\n                </div>\r\n                {rows.map((elemento, index) => (\r\n                  <div key={index}>\r\n                    {elemento.socialNetwork === \"CustomURL\" ? (\r\n                      <div className=\"row d-flex justify-content-center h5 pb-3\">\r\n                        <div className=\"border p-2 border-link col-10\">\r\n                          <a\r\n                            className=\"btn-no-style\"\r\n                            target=\"_blank\"\r\n                            href={elemento.profile}\r\n                          >\r\n                            <div className=\"d-flex col-lg-12 justify-content-center\">\r\n                              <img\r\n                                className=\"mt-1\"\r\n                                width=\"25\"\r\n                                height=\"25\"\r\n                                src={CustomURLIcon}\r\n                                alt=\"CustomURL\"\r\n                              />\r\n                              &nbsp;\r\n                              {elemento.linkName}\r\n                            </div>\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                ))}\r\n\r\n                {/*Se muestra el gallery si está activo*/}\r\n                <ProfileCarousel gallery={gallery} />     \r\n\r\n                <div className=\"row mt-1 pb-3\">\r\n                <div className=\"col-6\">\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <div className=\"border border-link\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <h5 className=\"font-bold pb-1 pt-2\">QR Code</h5>\r\n                    </div>\r\n                    <QRCode\r\n                      id=\"QR\"\r\n                      value={\"https://profile.stdicompany.com/\" + username}\r\n                      className=\"m-1 p-2\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-6\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"border p-2 mr-1 border-link\">\r\n                        {/*Inicio Botón Copy Link */}\r\n                        <div className=\"d-flex justify-content-center\">\r\n                        <Button\r\n                          ref={target}\r\n                          onClick={() => {\r\n                            setShow(!show);\r\n                            copyToClipboard(username);\r\n                          }}\r\n                        >\r\n                          \r\n                          <span>\r\n                            <i className=\"bi bi-clipboard\" />\r\n                          </span>\r\n                          &nbsp; Copy Link\r\n                        </Button>\r\n                        </div>\r\n\r\n                        <Overlay\r\n                          target={target.current}\r\n                          show={show}\r\n                          placement=\"top\"\r\n                        >\r\n                          {(props) => (\r\n                            <Tooltip id=\"overlay-example\" {...props}>\r\n                              Profile copied to clipboard!\r\n                            </Tooltip>\r\n                          )}\r\n                        </Overlay>\r\n                        {/*Final Botón Copy Link */}\r\n\r\n                        {/*Inicio Botón Share Link */}\r\n                        <Button\r\n                          variant=\"success\"\r\n                          ref={target}\r\n                          onClick={() => {\r\n                            shareLink(username);\r\n                          }}\r\n                          className=\"mt-3\"\r\n                        >\r\n                          <span>\r\n                            <i className=\"bi bi-share\" />\r\n                          </span>\r\n                          &nbsp; Share Link\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/*Fin de Formulario y muestra en vivo de como va quedando el perfil*/}\r\n\r\n          {/*Margen inferior*/}\r\n          <div className=\"mt-5\"></div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\ForgotPassword\\index.js",[],"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\UserName\\index.js",["268","269","270","271","272","273","274"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Button, Overlay, Tooltip } from \"react-bootstrap\";\r\nimport userImage from \"../../../assets/images/default-user-image.png\";\r\nimport logoImage from \"../../../assets/images/logo-white.png\";\r\nimport noBanner from \"../../../assets/images/no-banner.jpg\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport history from \"../../../components/History\";\r\nimport axios from \"axios\";\r\nimport helpers from \"../../../components/Helpers\";\r\nimport { SpinnerLoading } from \"../../../components/SpinnerLoading\";\r\n\r\n/*Iconos que no están en boostrap-icons.css*/\r\nimport YoutubeIcon from \"../../../assets/svg/youtube.svg\";\r\nimport InstagramIcon from \"../../../assets/svg/instagram.svg\";\r\nimport TwitterIcon from \"../../../assets/svg/twitter.svg\";\r\nimport FacebookIcon from \"../../../assets/svg/facebook.svg\";\r\nimport LinkedinIcon from \"../../../assets/svg/linkedin.svg\";\r\nimport SnapchatIcon from \"../../../assets/svg/snapchat.svg\";\r\nimport AppleMusicIcon from \"../../../assets/svg/apple-music.svg\";\r\nimport CashappIcon from \"../../../assets/svg/cashapp.svg\";\r\nimport SoundcloudIcon from \"../../../assets/svg/soundcloud.svg\";\r\nimport SpotifyIcon from \"../../../assets/svg/spotify.svg\";\r\nimport TiktokIcon from \"../../../assets/svg/tiktok.svg\";\r\nimport VenmoIcon from \"../../../assets/svg/venmo.svg\";\r\nimport PaypalIcon from \"../../../assets/svg/paypal.svg\";\r\nimport MapPinIcon from \"../../../assets/svg/locationmap.svg\";\r\nimport EmailIcon from \"../../../assets/svg/mail.svg\";\r\nimport WhatsappIcon from \"../../../assets/svg/whatsapp.svg\";\r\nimport TelegramIcon from \"../../../assets/svg/telegram.svg\";\r\nimport GoFundMeIcon from \"../../../assets/svg/gofundme.svg\";\r\nimport TwitchIcon from \"../../../assets/svg/twitch.svg\";\r\nimport OnlyFansIcon from \"../../../assets/svg/onlyfans.svg\";\r\nimport DiscordIcon from \"../../../assets/svg/discord.svg\";\r\nimport HousePartyIcon from \"../../../assets/svg/houseparty.svg\";\r\nimport SmsIcon from \"../../../assets/svg/sms.svg\";\r\nimport PhoneIcon from \"../../../assets/svg/phone.svg\";\r\nimport WebsiteIcon from \"../../../assets/svg/website.svg\";\r\nimport CustomURLIcon from \"../../../assets/svg/customurl.svg\";\r\nimport CustomImageIcon from \"../../../assets/svg/galleryimage.svg\"\r\n\r\n//Componentes hijos\r\nimport { SocialMedia } from \"./childrenComponents/SocialMedia\";\r\nimport { CustomLink } from \"./childrenComponents/CustomLink\";\r\nimport { CustomImage } from \"./childrenComponents/CustomImage\"\r\nimport { YoutubeEmbedVideo } from \"./childrenComponents/YoutubeEmbedVideo\";\r\nimport { ProfileCarousel } from \"./childrenComponents/ProfileCarousel\";\r\n\r\nconst { swalOffBackend, convertStringWithPlus, copyToClipboard, shareLink } = helpers;\r\nconst QRCode = require(\"qrcode.react\");\r\n\r\n/*Componente para manejar nombre del usuario*/\r\nexport const UserName = ({ location }) => {\r\n  const [profileName, setProfileName] = useState(\"\");\r\n  const [profileBio, setProfileBio] = useState(\"\");\r\n  const [profileUsername, setProfileUsername] = useState(\"\");\r\n  const [socialMedia, setSocialMedia] = useState([]);\r\n  const [gallery, setGallery] = useState([]);\r\n  const [customImage, setCustomImage] = useState([]);\r\n  const [loadingProfileData, setLoadingProfileData] = useState(true); //Animación cargando datos de perfil\r\n\r\n  const [base64ImgProfile, setBase64ImgProfile] = useState(\"\");\r\n  const [base64ImgBanner, setBase64ImgBanner] = useState(\"\");\r\n\r\n  // const [isLinked, setIsLinked] = useState(false);\r\n  // const [usernameLinked, setUsernameLinked] = useState(\"\");\r\n\r\n  const [sendNotifications2, setSendNotifications2] = useState(false);\r\n  const [emailProfile, setEmailProfile] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(null);\r\n\r\n  const { pathname } = location;\r\n  const username = pathname.replace(\"/\", \"\");\r\n\r\n  const payload = {\r\n    username: username /*Puede ser el usuario o el nro de serial*/,\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"/users/usernameData\", payload)\r\n      .then((res) => {\r\n        const { ok, msg, data, email, gallery, customImage } = res.data;\r\n\r\n        if (ok && msg === \"Username Profile Data found.\") {\r\n          const {\r\n            profileFullName,\r\n            profileBio,\r\n            socialMedia,\r\n            base64ProfilePhoto,\r\n            base64BannerPhoto,\r\n            sendNotifications,\r\n          } = data;\r\n          setProfileName(profileFullName);\r\n          setSocialMedia(socialMedia);\r\n          setProfileBio(profileBio);\r\n          setProfileUsername(res.data.username);\r\n          setGallery(gallery);\r\n          setCustomImage(customImage);\r\n\r\n          /*********PINTAMOS LA FOTO O EL BANNER***************/\r\n          /* Depende de lo que retorne el servicio, pintamos ya sea el icon del perfil gris o\r\n           * pintamos la ruta guardada como key en s3 de la imagen\r\n           */\r\n          if (base64ProfilePhoto === \"\") {\r\n            setBase64ImgProfile(userImage);\r\n          } else {\r\n            setBase64ImgProfile(\r\n              `${process.env.REACT_APP_API_URL}/render/image/${base64ProfilePhoto}`\r\n            );\r\n          }\r\n          if (base64BannerPhoto === \"\") {\r\n            setBase64ImgBanner(noBanner);\r\n          } else {\r\n            setBase64ImgBanner(\r\n              `${process.env.REACT_APP_API_URL}/render/image/${base64BannerPhoto}`\r\n            );\r\n          }\r\n          /***************************************************** */\r\n\r\n          //Guardamos esto en una variable (no se usa de momento)\r\n          setSendNotifications2(sendNotifications);\r\n          //Envío el valor a ver si se va a enviar correo o no\r\n          sendEmailNotifications(sendNotifications, email);\r\n\r\n          setLoadingProfileData(false);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        if (e.response === undefined) {\r\n          swalOffBackend();\r\n          setLoadingProfileData(false);\r\n          history.push(\"/\");\r\n          return 1;\r\n        }\r\n\r\n        const { msg, ok } = e.response.data;\r\n        if (!ok) {\r\n          Swal.fire({\r\n            title: \"Error\",\r\n            text: msg,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Try again\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              history.push(\"/login\");\r\n            } else {\r\n              history.push(\"/login\");\r\n            }\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const sendEmailNotifications = (value, email) => {\r\n    if (value === true) {\r\n      //Si el valor que recibe es true entonces enviamos el correo\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        console.log(\"Latitude is :\", position.coords.latitude);\r\n        console.log(\"Longitude is :\", position.coords.longitude);\r\n\r\n        const payloadToSendNotifications = {\r\n          to: email,\r\n          latitude: position.coords.latitude,\r\n          longitude: position.coords.longitude,\r\n        };\r\n\r\n        console.log(payloadToSendNotifications);\r\n\r\n        axios\r\n          .post(\"email/sendNotification\", payloadToSendNotifications)\r\n          .then((res) => {\r\n            if (res.data.ok === true) {\r\n              console.log(\"Correo fue enviado\");\r\n            } else {\r\n              console.log(\"Correo no fue enviado\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Ha ocurrido un error al enviar correo\");\r\n          });\r\n      });\r\n    } else {\r\n      console.log(\"Notifications disabled\");\r\n    }\r\n  };\r\n\r\n  const viewPrivateLinks = () => {\r\n    Swal.fire({\r\n      title: \"PIN\",\r\n      html: `<input type=\"password\" placeholder=\"PIN to unlock private information\" \r\n            className=\"swal2-input\" maxLength=\"4\">`,\r\n      icon: \"warning\",\r\n      confirmButtonText: \"OK\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loadingProfileData === true ? (\r\n        <SpinnerLoading />\r\n      ) : (\r\n        <div>\r\n          {\r\n            //style={{ width: \"100%\" }}\r\n          }\r\n          <div\r\n            // style={{\r\n            //   backgroundColor: \"#424242\",\r\n            //   height: \"200px\",\r\n            //   width: \"100%\",\r\n            // }}\r\n            className=\"banner-with-no-image\"\r\n          >\r\n            <img\r\n              src={base64ImgBanner}\r\n              className=\"banner w-100\"\r\n              alt=\"backgroundImageProfile\"\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"col-sm-12 card-body\"\r\n            style={{ backgroundColor: \"white\" }}\r\n          >\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"box\">\r\n                <img\r\n                  src={base64ImgProfile}\r\n                  className=\"img-profile\"\r\n                  alt=\"ProfilePhoto\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row h5 mt-3\">\r\n              <div className=\"col-12 d-flex justify-content-center\">\r\n                <h3 className=\"font-bold\">{profileName}</h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row text-center h5\">\r\n              <div className=\"col-12 d-flex justify-content-center pre-wrap\">\r\n                <h5>{profileBio}</h5>\r\n              </div>\r\n            </div>\r\n\r\n            {/*<div className=\"row\">\r\n                    <div className=\"col-sm-12 text-center\">\r\n                        <a  href=\"/edit-profile\" className=\"mr-2 btn btn-primary btn-sm center-block\" style={{width: \"100px\"}}>Edit Profile</a>\r\n                        <a className=\"ml-2 btn btn-primary btn-sm center-block\" style={{width: \"100px\"}}>Sign Out</a>\r\n                    </div>\r\n        </div>*/}\r\n\r\n            <YoutubeEmbedVideo socialMedia={socialMedia} />\r\n\r\n            {/*Componente de redes sociales visualizadas en el perfil*/}\r\n            <SocialMedia\r\n              socialMedia={socialMedia}\r\n              YoutubeIcon={YoutubeIcon}\r\n              TwitterIcon={TwitterIcon}\r\n              WhatsappIcon={WhatsappIcon}\r\n              InstagramIcon={InstagramIcon}\r\n              FacebookIcon={FacebookIcon}\r\n              EmailIcon={EmailIcon}\r\n              PhoneIcon={PhoneIcon}\r\n              SnapchatIcon={SnapchatIcon}\r\n              SoundcloudIcon={SoundcloudIcon}\r\n              LinkedinIcon={LinkedinIcon}\r\n              TiktokIcon={TiktokIcon}\r\n              SpotifyIcon={SpotifyIcon}\r\n              AppleMusicIcon={AppleMusicIcon}\r\n              VenmoIcon={VenmoIcon}\r\n              CashappIcon={CashappIcon}\r\n              WebsiteIcon={WebsiteIcon}\r\n              PaypalIcon={PaypalIcon}\r\n              TelegramIcon={TelegramIcon}\r\n              OnlyFansIcon={OnlyFansIcon}\r\n              GoFundMeIcon={GoFundMeIcon}\r\n              TwitchIcon={TwitchIcon}\r\n              DiscordIcon={DiscordIcon}\r\n              HousePartyIcon={HousePartyIcon}\r\n              SmsIcon={SmsIcon}\r\n              convertStringWithPlus={convertStringWithPlus}\r\n              MapPinIcon={MapPinIcon}\r\n            /> \r\n\r\n            {/*Componentes de links customizados al visualizar el perfil*/}\r\n            <CustomImage\r\n              customImage={customImage}\r\n              CustomImageIcon={CustomImageIcon}\r\n            />\r\n\r\n            {/*Componentes de links customizados al visualizar el perfil*/}\r\n            <CustomLink\r\n              socialMedia={socialMedia}\r\n              CustomURLIcon={CustomURLIcon}\r\n            />\r\n\r\n            {/*Carrusel Imágenes*/}\r\n            <ProfileCarousel gallery={gallery} />\r\n\r\n            {/*Botón Copiar Link*/}\r\n            <div className=\"row pt-2\">\r\n              <div className=\"col-6\">\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <div className=\"border border-link\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <h5 className=\"font-bold pb-1 pt-2\">QR Code</h5>\r\n                    </div>\r\n                    <QRCode\r\n                      id=\"QR\"\r\n                      value={\"https://profile.stdicompany.com/\" + username}\r\n                      className=\"m-1 p-2\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-6\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"border p-2 mr-1 border-link\">\r\n                        {/*Inicio Botón Copy Link */}\r\n                        <div className=\"d-flex justify-content-center\">\r\n                        <Button\r\n                          ref={target}\r\n                          onClick={() => {\r\n                            setShow(!show);\r\n                            copyToClipboard(profileUsername);\r\n                          }}\r\n                        >\r\n                          <span>\r\n                            <i className=\"bi bi-clipboard\" />\r\n                          </span>\r\n                          &nbsp; Copy Link\r\n                        </Button>\r\n                        </div>\r\n\r\n                        <Overlay\r\n                          target={target.current}\r\n                          show={show}\r\n                          placement=\"top\"\r\n                        >\r\n                          {(props) => (\r\n                            <Tooltip id=\"overlay-example\" {...props}>\r\n                              Profile copied to clipboard!\r\n                            </Tooltip>\r\n                          )}\r\n                        </Overlay>\r\n                        {/*Final Botón Copy Link */}\r\n\r\n                        {/*Inicio Botón Share Link */}\r\n                        <Button\r\n                          variant=\"success\"\r\n                          ref={target}\r\n                          onClick={() => {\r\n                            shareLink(profileUsername);\r\n                          }}\r\n                          className=\"mt-3\"\r\n                        >\r\n                          <span>\r\n                            <i className=\"bi bi-share\" />\r\n                          </span>\r\n                          &nbsp; Share Link\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row p-3\">\r\n              <div className=\"col-lg-12\">\r\n                <div id=\"map\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"alert-information\">\r\n            <div className=\"col-12\">\r\n              <div className=\"d-flex justify-content-center\">\r\n                <a\r\n                  className=\"text-white font-bold\"\r\n                  href=\"https://shop.stdicompany.com/\"\r\n                  target=\"_blank\"\r\n                >\r\n                  STDI rocks, right? Tap here to get yours.\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"pt-3 text-white\">\r\n            <div className=\"col-12 col-sm-12\">\r\n              <div className=\"d-flex justify-content-center\">\r\n                <a href=\"https://www.stdicompany.com/\">\r\n                  <img className=\"img-profile-logo\" src={logoImage} />\r\n                </a>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center mt-2\">\r\n                <h5 className=\"font-bold\">STDI Company</h5>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <h6>All features registered &copy;</h6>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Comantado ya que se usará para la info privada\r\n            <div className=\"row d-flex justify-content-center h5\">\r\n                <div className=\"m-2 card col-sm-3\" onClick={viewPrivateLinks} style={{cursor: 'pointer'}}>\r\n                    <div className=\"card-body\">\r\n                        <span className=\"btn-sm\" style={{backgroundColor: 'black', \r\n                            borderRadius: '15px',\r\n                            textAlign: 'center', color: 'white' }}\r\n                        >\r\n                        <i className=\"bi bi-lock-fill\"></i></span>\r\n                        &#160;<label style={{ color: \"black\" }}> Private</label>\r\n                    </div>\r\n                </div>\r\n            </div>*/}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\components\\Helpers.js",[],"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\components\\SpinnerLoading.js",["275"],"import React from \"react\";\r\nimport logoImage from \"../assets/images/logo-white.png\";\r\n\r\nexport const SpinnerLoading = () => {\r\n  return (\r\n    <div className=\"container-loading text-white\">\r\n      <div className=\"overlay\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <img width=\"50\" height=\"50\" src={logoImage} />\r\n        </div>\r\n        <div className=\"d-flex justify-content-center mt-3\">\r\n          <span\r\n            className=\"spinner-border\"\r\n            role=\"status\"\r\n            style={{ \"inlineBlock\": \"none\" }}\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\NoDymanicForm.js",["276"],"import React, { useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Form, InputGroup, Alert, Button } from \"react-bootstrap\";\r\n\r\n// //Componente Hijo\r\n// import SendNotifications from \"./SendNotifications\";\r\n// import LinkToAnotherProfile from \"./LinkToAnotherProfile\";\r\n\r\nfunction NoDymanicForm({\r\n  nameState,\r\n  bioState,\r\n  sendNotifications,\r\n  setSendNotifications,\r\n  username,\r\n  isLinked,\r\n  setIsLinked,\r\n  usernameLinked,\r\n  disabledButton,\r\n  reader,\r\n  reader2,\r\n  handleNameChange,\r\n  handleBioChange,\r\n  handleOnAdd,\r\n  onSubmit,\r\n  clearData,\r\n  setBase64ImgBanner,\r\n  setImgProfileToUpload,\r\n  setImgBannerToUpload,\r\n}) {\r\n  const [socialMediaState, setSocialMediaState] = useState(\"\");\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, { resetForm }) => {\r\n        onSubmit(values);\r\n        resetForm({ values: null });\r\n      }}\r\n      initialValues={{\r\n        fullName: nameState,\r\n        bio: bioState,\r\n        socialMedia: null,\r\n      }}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        handleBlur,\r\n        setFieldValue,\r\n        values,\r\n        touched,\r\n        isValid,\r\n        errors,\r\n      }) => (\r\n        <Form\r\n          onSubmit={handleSubmit}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          name=\"addProfileData\"\r\n          id=\"addProfileeData\"\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-sm-12\">\r\n              {/*Inicio Campo Profile Fullname*/}\r\n              <Form.Label className=\"text-white form-label\" htmlFor=\"basic-url\">\r\n                Profile Full Name:\r\n              </Form.Label>\r\n              <InputGroup className=\"mb-2\">\r\n                <Form.Control\r\n                  name=\"fullName\"\r\n                  //values={values.fullName}\r\n                  defaultValue={nameState}\r\n                  type=\"text\"\r\n                  placeholder=\"Type your profile name\"\r\n                  onChange={handleNameChange}\r\n                />\r\n              </InputGroup>\r\n              {/*Fin Campo Profile Fullname*/}\r\n              {/*Inicio Campo Profile Photo*/}\r\n              <InputGroup className=\"mb-2\">\r\n                <Form.Group controlId=\"formFile\" className=\"mb-2\">\r\n                  <Form.Label className=\"text-white form-label\">\r\n                    Profile Photo:\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"file\"\r\n                    onChange={(e) => {\r\n                      if (e.target.files.length > 0) {\r\n                        if (\r\n                          e.target.files[0].type === \"image/jpeg\" ||\r\n                          e.target.files[0].type === \"image/jpg\" ||\r\n                          e.target.files[0].type === \"image/png\" ||\r\n                          e.target.files[0].type === \"image/gif\"\r\n                        ) {\r\n                          /*Acá seteamos el perfil para enviarlo por formData (no en base64) */\r\n                          setImgProfileToUpload(e.target.files[0]);\r\n\r\n                          reader.readAsDataURL(e.target.files[0]);\r\n                        } else {\r\n                          Swal.fire({\r\n                            title: \"Unsupported format\",\r\n                            text: \"Format supported: JPG, JPEG, PNG and GIF.\",\r\n                            icon: \"info\",\r\n                            confirmButtonText: \"OK\",\r\n                          });\r\n                        }\r\n                      } else {\r\n                        setBase64ImgBanner(\"\");\r\n                      }\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </InputGroup>\r\n              {/*Fin Campo Profile Photo*/}\r\n              {/*Inicio Campo Banner Photo*/}\r\n              <InputGroup className=\"mb-2\">\r\n                <Form.Group controlId=\"formFile2\" className=\"mb-2\">\r\n                  <Form.Label className=\"text-white form-label\">\r\n                    Banner Photo:\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"file\"\r\n                    accept=\".jpg,.jpeg,.png\"\r\n                    onChange={(e) => {\r\n                      if (e.target.files.length > 0) {\r\n                        if (\r\n                          e.target.files[0].type === \"image/jpeg\" ||\r\n                          e.target.files[0].type === \"image/jpg\" ||\r\n                          e.target.files[0].type === \"image/png\" ||\r\n                          e.target.files[0].type === \"image/gif\"\r\n                        ) {\r\n                          /*Acá guardamos el banner para enviarlo por formData (no formato base64)*/\r\n                          setImgBannerToUpload(e.target.files[0]);\r\n\r\n                          reader2.readAsDataURL(e.target.files[0]);\r\n                        } else {\r\n                          Swal.fire({\r\n                            title: \"Unsupported format\",\r\n                            text: \"Format supported: JPG, JPEG, PNG and GIF.\",\r\n                            icon: \"info\",\r\n                            confirmButtonText: \"OK\",\r\n                          });\r\n                        }\r\n                      } else {\r\n                        setBase64ImgBanner(\"\");\r\n                      }\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </InputGroup>\r\n              {/*Fin Campo Banner Photo*/}\r\n              {/*Inicio Campo Activar Notificaciones*/}\r\n              {/*<SendNotifications\r\n                setSendNotifications={setSendNotifications}\r\n                sendNotifications={sendNotifications}\r\n              />*/}\r\n              {/*Fin Campo Activar Notificaciones*/}\r\n              {/*Inicio Campo Linkear a otro perfil*/}\r\n              {/*<LinkToAnotherProfile\r\n                isLinked={isLinked}\r\n                usernameLinked={usernameLinked}\r\n                username={username}\r\n                setIsLinked={setIsLinked}\r\n              />*7}\r\n              {/*Fin Campo Linkear a otro perfil*/}\r\n              {/*Inicio Campo Profile Bio*/}\r\n              <Form.Label\r\n                className=\"text-white form-label mt-2\"\r\n                htmlFor=\"basic-url\"\r\n              >\r\n                Profile Bio:\r\n              </Form.Label>\r\n              <InputGroup className=\"mb-2\">\r\n                <Form.Control\r\n                  name=\"bio\"\r\n                  //values={values.bio}\r\n                  defaultValue={bioState}\r\n                  as=\"textarea\"\r\n                  placeholder=\"Type your profile name\"\r\n                  onChange={handleBioChange}\r\n                  style={{ height: \"100px\" }}\r\n                />\r\n              </InputGroup>\r\n              {/*Fin Campo Profile Bio*/}\r\n              {/*Inicio Select Social Media Channels*/}\r\n\r\n              <Form.Label className=\"text-white form-label\" htmlFor=\"basic-url\">\r\n                Social Media Channels:\r\n              </Form.Label>\r\n              <Alert variant=\"info\">\r\n                <Icon.ListCheck size={25} />\r\n                &nbsp; Click from the drop down to add the social media link.\r\n              </Alert>\r\n              <InputGroup className=\"mb-2\">\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"socialMedia\"\r\n                  values={values.socialMedia}\r\n                  onChange={(e) => {\r\n                    //if ((e.target.value = \"CustomURL\")) {\r\n                    //}\r\n                    //handleOnAdd(e);\r\n                    //handleSocialMedia(e);\r\n                    setSocialMediaState(e);\r\n                  }}\r\n                >\r\n                  <option value=\"\">Choose your media...</option>\r\n                  <option value=\"Instagram\">Instagram</option>\r\n                  <option value=\"Whatsapp\">Whatsapp</option>\r\n                  <option value=\"Snapchat\">Snapchat</option>\r\n                  <option value=\"Youtube\">Youtube</option>\r\n                  <option value=\"Facebook\">Facebook</option>\r\n                  <option value=\"Soundcloud\">Soundcloud</option>\r\n                  <option value=\"Linkedin\">Linkedin</option>\r\n                  <option value=\"Telegram\">Telegram</option>\r\n                  <option value=\"TikTok\">TikTok</option>\r\n                  <option value=\"Twitter\">Twitter</option>\r\n                  <option value=\"Spotify\">Spotify</option>\r\n                  <option value=\"Apple Music\">Apple Music</option>\r\n                  <option value=\"Venmo\">Venmo</option>\r\n                  <option value=\"CashApp\">CashApp</option>\r\n                  <option value=\"Phone Number\">Phone Number</option>\r\n                  <option value=\"Paypal\">Paypal</option>\r\n                  <option value=\"GoFundMe\">GoFundMe</option>\r\n                  <option value=\"Twitch\">Twitch</option>\r\n                  <option value=\"Discord\">Discord</option>\r\n                  <option value=\"HouseParty\">HouseParty</option>\r\n                  <option value=\"OnlyFans\">OnlyFans</option>\r\n                  <option value=\"Address\">Address</option>\r\n                  <option value=\"Email\">Email</option>\r\n                  <option value=\"SMS\">SMS</option>\r\n                  <option value=\"Website\">Website</option>\r\n                  <option value=\"CustomURL\">CustomURL</option>\r\n                  <option value=\"Embed Youtube Video\">\r\n                    Embed Youtube Video\r\n                  </option>\r\n                </Form.Control>\r\n                <InputGroup.Append>\r\n                  <Button\r\n                    \r\n                    onClick={() => handleOnAdd(socialMediaState)}\r\n                  >\r\n                    <Icon.PlusCircle size={20} className=\"pb-1\" />\r\n                    &nbsp;&nbsp;Add\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </div>\r\n\r\n            {/*<div className=\"col-12 col-sm-12 col-md-6\">\r\n              <InputGroup className=\"mb-2\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"primary\"\r\n                  disabled={disabledButton === true}\r\n                  block\r\n                >\r\n                  <div className=\"d-flex d-inline-block justify-content-center\">\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mt-1 mr-2\"\r\n                      role=\"status\"\r\n                      style={{\r\n                        display:\r\n                          disabledButton === true ? \"inline-block\" : \"none\",\r\n                      }}\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                    {disabledButton === true ? (\r\n                      \" Loading, please wait...\"\r\n                    ) : (\r\n                      <>\r\n                        <Icon.PersonLinesFill className=\"mt-1\" />\r\n                        &nbsp;&nbsp;\r\n                        <span>Save Changes</span>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </Button>\r\n              </InputGroup>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-sm-12 col-md-6\">\r\n              <InputGroup className=\"mb-2\">\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"danger\"\r\n                  onClick={() => clearData()}\r\n                  block\r\n                >\r\n                  <div className=\"d-flex d-inline-block justify-content-center\">\r\n                    <Icon.BackspaceFill className=\"mt-1\" />\r\n                    &nbsp;&nbsp;\r\n                    <span>Clear Data</span>\r\n                  </div>\r\n                </Button>\r\n              </InputGroup>\r\n            </div>\r\n                    */}\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default NoDymanicForm;\r\n","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\Row.js",["277"],"import React from \"react\";\r\nimport { Form, InputGroup, Button, FormControl } from \"react-bootstrap\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nimport YoutubeIcon from \"../../../../assets/svg/youtube.svg\";\r\nimport InstagramIcon from \"../../../../assets/svg/instagram.svg\";\r\nimport TwitterIcon from \"../../../../assets/svg/twitter.svg\";\r\nimport FacebookIcon from \"../../../../assets/svg/facebook.svg\";\r\nimport LinkedinIcon from \"../../../../assets/svg/linkedin.svg\";\r\nimport SnapchatIcon from \"../../../../assets/svg/snapchat.svg\";\r\nimport AppleMusicIcon from \"../../../../assets/svg/apple-music.svg\";\r\nimport CashappIcon from \"../../../../assets/svg/cashapp.svg\";\r\nimport SoundcloudIcon from \"../../../../assets/svg/soundcloud.svg\";\r\nimport SpotifyIcon from \"../../../../assets/svg/spotify.svg\";\r\nimport TiktokIcon from \"../../../../assets/svg/tiktok.svg\";\r\nimport VenmoIcon from \"../../../../assets/svg/venmo.svg\";\r\nimport PaypalIcon from \"../../../../assets/svg/paypal.svg\";\r\nimport MapPinIcon from \"../../../../assets/svg/locationmap.svg\";\r\nimport EmailIcon from \"../../../../assets/svg/mail.svg\";\r\nimport PhoneIcon from \"../../../../assets/svg/phone.svg\";\r\nimport WhatsappIcon from \"../../../../assets/svg/whatsapp.svg\";\r\nimport TelegramIcon from \"../../../../assets/svg/telegram.svg\";\r\nimport GoFundMeIcon from \"../../../../assets/svg/gofundme.svg\";\r\nimport TwitchIcon from \"../../../../assets/svg/twitch.svg\";\r\nimport OnlyFansIcon from \"../../../../assets/svg/onlyfans.svg\";\r\nimport DiscordIcon from \"../../../../assets/svg/discord.svg\";\r\nimport HousePartyIcon from \"../../../../assets/svg/houseparty.svg\";\r\nimport SmsIcon from \"../../../../assets/svg/sms.svg\";\r\nimport WebsiteIcon from \"../../../../assets/svg/website.svg\";\r\n\r\n//Está función está fuera del render porque si la dejo dentro de la func principal\r\n//se vuelve a renderizar y no funciona.\r\n//Es la función que me devuelve el html de las redes sociales => RRSS\r\n//seleccionadas. Si te fijas yo decido como se está viendo con el valor de view,\r\n//si view===1 me devuelve la vista de los campos que puedo editar\r\n//si view===2 me devuelve la vista de las redes sociales en columna derecha\r\nfunction Row({\r\n  onChange,\r\n  onRemove,\r\n  view,\r\n  profile,\r\n  socialNetwork,\r\n  linkName,\r\n  convertStringWithPlus,\r\n  //socialNetworkIcon,\r\n  //socialNetworkURL,\r\n}) {\r\n  return (\r\n    <>\r\n      {view === 1 ? (\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col-12 col-sm-12\">\r\n            <label className=\"text-white\">{socialNetwork}</label>\r\n            {socialNetwork !== \"CustomURL\" ? (\r\n              <InputGroup>\r\n                <Form.Control\r\n                  name=\"profile\"\r\n                  value={profile}\r\n                  onChange={(e) => onChange(\"profile\", e.target.value)}\r\n                  placeholder={\r\n                    socialNetwork === \"Instagram\"\r\n                      ? \"Instagram username\"\r\n                      : socialNetwork === \"Snapchat\"\r\n                      ? \"Snapchat username\"\r\n                      : socialNetwork === \"Whatsapp\"\r\n                      ? \"Country code and phone number\"\r\n                      : socialNetwork === \"Youtube\"\r\n                      ? \"Type the full link\"\r\n                      : socialNetwork === \"Facebook\"\r\n                      ? \"Type the full link\"\r\n                      : socialNetwork === \"Soundcloud\"\r\n                      ? \"Souncloud username\"\r\n                      : socialNetwork === \"Linkedin\"\r\n                      ? \"Type the full link\"\r\n                      : socialNetwork === \"TikTok\"\r\n                      ? \"Type the full link\"\r\n                      : socialNetwork === \"Twitter\"\r\n                      ? \"Twitter username\"\r\n                      : socialNetwork === \"Spotify\"\r\n                      ? \"Spotify username\"\r\n                      : socialNetwork === \"Apple Music\"\r\n                      ? \"Apple Music username\"\r\n                      : socialNetwork === \"Venmo\"\r\n                      ? \"Venmo username\"\r\n                      : socialNetwork === \"CashApp\"\r\n                      ? \"Cashapp username\"\r\n                      : socialNetwork === \"Address\"\r\n                      ? \"Type the full address\"\r\n                      : socialNetwork === \"Phone Number\"\r\n                      ? \"Country code and phone number\"\r\n                      : socialNetwork === \"Email\"\r\n                      ? \"Type the email address\"\r\n                      : socialNetwork === \"SMS\"\r\n                      ? \"Country code and phone number\"\r\n                      : socialNetwork === \"Paypal\"\r\n                      ? \"Paypal username\"\r\n                      : socialNetwork === \"OnlyFans\"\r\n                      ? \"OnlyFans username\"\r\n                      : socialNetwork === \"GoFundMe\"\r\n                      ? \"Type the full link\"\r\n                      : socialNetwork === \"Telegram\"\r\n                      ? \"Telegram username\"\r\n                      : socialNetwork === \"Twitch\"\r\n                      ? \"Twitch username\"\r\n                      : socialNetwork === \"Discord\"\r\n                      ? \"Type the full link\"\r\n                      : socialNetwork === \"HouseParty\"\r\n                      ? \"HouseParty username\"\r\n                      : socialNetwork === \"Embed Youtube Video\"\r\n                      ? \"Type Embed Youtube ID\"\r\n                      : \"Type the full link\"\r\n                  }\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button variant=\"danger\" onClick={onRemove}>\r\n                    <Icon.XCircleFill />\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            ) : (\r\n              <>\r\n                <InputGroup>\r\n                  <FormControl\r\n                    placeholder=\"Description\"\r\n                    name=\"linkName\"\r\n                    value={linkName}\r\n                    onChange={(e) => onChange(\"linkName\", e.target.value)}\r\n                  />\r\n                </InputGroup>\r\n                <InputGroup>\r\n                  <FormControl\r\n                    placeholder=\"Type the full link\"\r\n                    name=\"profile\"\r\n                    value={profile}\r\n                    onChange={(e) => onChange(\"profile\", e.target.value)}\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <Button variant=\"danger\" onClick={onRemove}>\r\n                      <Icon.XCircleFill />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : view === 2 && socialNetwork !== \"CustomURL\" && socialNetwork !== \"Embed Youtube Video\" ? (\r\n        <>\r\n          <div className=\"border border-link m-2 col-3\">\r\n            <a\r\n              className=\"btn-no-style\"\r\n              target=\"_blank\"\r\n              href={\r\n                socialNetwork === \"Instagram\"\r\n                  ? \"https://www.instagram.com/\" + profile\r\n                  : socialNetwork === \"Snapchat\"\r\n                  ? \"https://www.snapchat.com/add/\" + profile\r\n                  : socialNetwork === \"Whatsapp\"\r\n                  ? \"https://wa.me/\" + profile\r\n                  : socialNetwork === \"Youtube\"\r\n                  ? profile\r\n                  : socialNetwork === \"Facebook\"\r\n                  ? profile\r\n                  : socialNetwork === \"Soundcloud\"\r\n                  ? \"https://www.soundcloud.com/add/\" + profile\r\n                  : socialNetwork === \"Linkedin\"\r\n                  ? profile\r\n                  : socialNetwork === \"TikTok\"\r\n                  ? profile\r\n                  : socialNetwork === \"Twitter\"\r\n                  ? \"https://www.twitter.com/\" + profile\r\n                  : socialNetwork === \"Spotify\"\r\n                  ? \"https://www.spotify.com/\" + profile\r\n                  : socialNetwork === \"Apple Music\"\r\n                  ? \"https://music.apple.com/\" + profile\r\n                  : socialNetwork === \"Venmo\"\r\n                  ? \"https://www.venmo.com/\" + profile\r\n                  : socialNetwork === \"CashApp\"\r\n                  ? \"https://cash.app/$\" + profile\r\n                  : socialNetwork === \"Address\"\r\n                  ? \"https://www.google.com/maps/search/\" +\r\n                    convertStringWithPlus(profile)\r\n                  : socialNetwork === \"Phone Number\"\r\n                  ? \"tel:\" + profile\r\n                  : socialNetwork === \"Email\"\r\n                  ? \"mailto:\" + profile\r\n                  : socialNetwork === \"SMS\"\r\n                  ? \"sms:\" + profile\r\n                  : socialNetwork === \"Paypal\"\r\n                  ? \"https://paypal.com/\" + profile\r\n                  : socialNetwork === \"Telegram\"\r\n                  ? \"https://t.me/\" + profile\r\n                  : socialNetwork === \"OnlyFans\"\r\n                  ? \"https://onlyfans.com/\" + profile\r\n                  : socialNetwork === \"GoFundMe\"\r\n                  ? profile\r\n                  : socialNetwork === \"Twitch\"\r\n                  ? \"https://twitch.tv/\" + profile\r\n                  : socialNetwork === \"Discord\"\r\n                  ? profile\r\n                  : socialNetwork === \"HouseParty\"\r\n                  ? \"https://houseparty.com/add/\" + profile\r\n                  : profile\r\n              }\r\n            >\r\n              <div className=\"pt-3 pb-3\">\r\n                <div className=\"d-flex justify-content-center\">\r\n                  {socialNetwork === \"Instagram\" ? (\r\n                    <img\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      src={InstagramIcon}\r\n                      alt=\"Instagram\"\r\n                    />\r\n                  ) : socialNetwork === \"Whatsapp\" ? (\r\n                    <img\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      src={WhatsappIcon}\r\n                      alt=\"Whatsapp\"\r\n                    />\r\n                  ) : socialNetwork === \"Snapchat\" ? (\r\n                    <img\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      src={SnapchatIcon}\r\n                      alt=\"Snapchat\"\r\n                    />\r\n                  ) : socialNetwork === \"Youtube\" ? (\r\n                    <img\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      src={YoutubeIcon}\r\n                      alt=\"Youtube\"\r\n                    />\r\n                  ) : socialNetwork === \"Facebook\" ? (\r\n                    <img\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      src={FacebookIcon}\r\n                      alt=\"Facebook\"\r\n                    />\r\n                  ) : socialNetwork === \"Soundcloud\" ? (\r\n                    <img\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      src={SoundcloudIcon}\r\n                      alt=\"Soundcloud\"\r\n                    />\r\n                  ) : socialNetwork === \"Linkedin\" ? (\r\n                    <img\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      src={LinkedinIcon}\r\n                      alt=\"Linkedin\"\r\n                    />\r\n                  ) : socialNetwork === \"TikTok\" ? (\r\n                    <img width=\"50\" height=\"50\" src={TiktokIcon} alt=\"TikTok\" />\r\n                  ) : socialNetwork === \"Twitter\" ? (\r\n                    <img\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      src={TwitterIcon}\r\n                      alt=\"Twitter\"\r\n                    />\r\n                  ) : socialNetwork === \"Spotify\" ? (\r\n                    <img\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      src={SpotifyIcon}\r\n                      alt=\"Spotify\"\r\n                    />\r\n                  ) : socialNetwork === \"Apple Music\" ? (\r\n                    <img\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      src={AppleMusicIcon}\r\n                      alt=\"Apple Music\"\r\n                    />\r\n                  ) : socialNetwork === \"Venmo\" ? (\r\n                    <img width=\"50\" height=\"50\" src={VenmoIcon} alt=\"Venmo\" />\r\n                  ) : socialNetwork === \"CashApp\" ? (\r\n                    <img\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      src={CashappIcon}\r\n                      alt=\"CashApp\"\r\n                    />\r\n                  ) : socialNetwork === \"Phone Number\" ? (\r\n                    <img width=\"50\" height=\"50\" src={PhoneIcon} alt=\"Phone\" />\r\n                  ) : socialNetwork === \"Email\" ? (\r\n                    <img width=\"50\" height=\"50\" src={EmailIcon} alt=\"Email\" />\r\n                  ) : socialNetwork === \"Website\" ? (\r\n                    <img\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      src={WebsiteIcon}\r\n                      alt=\"Website\"\r\n                    />\r\n                  ) : socialNetwork === \"Address\" ? (\r\n                    <img\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      src={MapPinIcon}\r\n                      alt=\"Google Maps\"\r\n                    />\r\n                  ) : socialNetwork === \"SMS\" ? (\r\n                    <img width=\"50\" height=\"50\" src={SmsIcon} alt=\"SMS\" />\r\n                  ) : socialNetwork === \"Paypal\" ? (\r\n                    <img width=\"50\" height=\"50\" src={PaypalIcon} alt=\"Paypal\" />\r\n                  ) : socialNetwork === \"Telegram\" ? (\r\n                    <img\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      src={TelegramIcon}\r\n                      alt=\"Telegram\"\r\n                    />\r\n                  ) : socialNetwork === \"OnlyFans\" ? (\r\n                    <img\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      src={OnlyFansIcon}\r\n                      alt=\"OnlyFans\"\r\n                    />\r\n                  ) : socialNetwork === \"GoFundMe\" ? (\r\n                    <img\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      src={GoFundMeIcon}\r\n                      alt=\"GoFundMe\"\r\n                    />\r\n                  ) : socialNetwork === \"Twitch\" ? (\r\n                    <img width=\"50\" height=\"50\" src={TwitchIcon} alt=\"Twitch\" />\r\n                  ) : socialNetwork === \"Discord\" ? (\r\n                    <img\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      src={DiscordIcon}\r\n                      alt=\"Discord\"\r\n                    />\r\n                  ) : socialNetwork === \"HouseParty\" ? (\r\n                    <img\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      src={HousePartyIcon}\r\n                      alt=\"HouseParty\"\r\n                    />\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <div className=\"d-none d-sm-block\">{socialNetwork}</div>\r\n                </div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\ModalChangePassword.js",["278"],"import { useState, useContext } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n//import { AppContext } from \"../../components/common/AppContext\";\r\n\r\nconst schema = Yup.object({\r\n  passwordOld: Yup.string()\r\n    .required(\"Password is required\")\r\n    .min(8, \"Password must have 8 digits\"),\r\n  passwordNew: Yup.string()\r\n    .required(\"New Password is required\")\r\n    .min(8, \"Confirm password must have 8 digits\")\r\n    .notOneOf(\r\n      [Yup.ref(\"passwordOld\"), null],\r\n      \"Password must be different than actual one\"\r\n    )\r\n    .matches(\r\n      /^.*(?=.{6,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\r\n      \"Passwords must have uppercase letters, symbols and numbers\"\r\n    ),\r\n  confirmPasswordNew: Yup.string()\r\n    .oneOf([Yup.ref(\"passwordNew\"), null], \"Passwords must be the same\")\r\n    .required(\"Confirm password is required\"),\r\n});\r\n\r\nfunction ModalChangePassword({ name, username, serialNumber, email }) {\r\n  //const { objLogin } = useContext(AppContext);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [disabledButton, setDisabledButton] = useState(false);\r\n\r\n  const onSubmit = (event) => {\r\n    setDisabledButton(true);\r\n\r\n    const payload = {\r\n      name: name,\r\n      username: username,\r\n      email: email,\r\n      serialNumber: serialNumber,\r\n      password: event.passwordOld,\r\n      newPassword: event.passwordNew,\r\n      confirmNewPassword: event.confirmPasswordNew,\r\n    };\r\n\r\n    axios\r\n      .post(\"/auth/changePassword\", payload)\r\n      .then((res) => {\r\n        if (res.data.ok === false) {\r\n          Swal.fire({\r\n            title: \"There's something wrong\",\r\n            text: res.data.msg,\r\n            icon: \"info\",\r\n            confirmButtonText: \"Ok\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Changes saved succesfully\",\r\n            text: \"\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Ok\",\r\n          });\r\n          handleClose();\r\n          setDisabledButton(false);\r\n        }\r\n\r\n        setDisabledButton(false);\r\n      })\r\n      .catch(function (error) {\r\n        setDisabledButton(false);\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"There's something wrong, please call the admin.\",\r\n        });\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <Button onClick={handleShow}>\r\n        <Icon.PencilFill /> Change Password\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Change Password</Modal.Title>\r\n        </Modal.Header>\r\n        <Formik\r\n          validationSchema={schema}\r\n          onSubmit={onSubmit}\r\n          initialValues={{\r\n            passwordOld: \"\",\r\n            passwordNew: \"\",\r\n            confirmPasswordNew: \"\",\r\n          }}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            handleChange,\r\n            values,\r\n            touched,\r\n            isValid,\r\n            errors,\r\n          }) => (\r\n            <Form\r\n              noValidate\r\n              onSubmit={handleSubmit}\r\n              name=\"login\"\r\n              autoComplete=\"off\"\r\n            >\r\n              <Modal.Body>\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-12 col-lg-12 m-auto\">\r\n                      <div className=\"form-group row pt-2\">\r\n                        <div className=\"font-weight-bold form-label-container col-lg-3\">\r\n                          <label htmlFor=\"run\">Password</label>\r\n                        </div>\r\n                        <div className=\"col-lg-9\">\r\n                          <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Type here your actual password\"\r\n                            name=\"passwordOld\"\r\n                            value={values.passwordOld}\r\n                            onChange={handleChange}\r\n                            isValid={\r\n                              !!touched.passwordOld && !errors.passwordOld\r\n                            }\r\n                            isInvalid={\r\n                              !!errors.passwordOld && !!touched.passwordOld\r\n                            }\r\n                          />\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            {errors.passwordOld}\r\n                          </Form.Control.Feedback>\r\n                        </div>\r\n\r\n                        <div className=\"font-weight-bold form-label-container col-lg-3 pt-2\">\r\n                          <label htmlFor=\"email\">New Password</label>\r\n                        </div>\r\n                        <div className=\"col-lg-9 pt-2\">\r\n                          <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Type here your new password\"\r\n                            name=\"passwordNew\"\r\n                            value={values.passwordNew}\r\n                            onChange={handleChange}\r\n                            isValid={\r\n                              !!touched.passwordNew && !errors.passwordNew\r\n                            }\r\n                            isInvalid={\r\n                              !!errors.passwordNew && !!touched.passwordNew\r\n                            }\r\n                          />\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            {errors.passwordNew}\r\n                          </Form.Control.Feedback>\r\n                        </div>\r\n\r\n                        <div className=\"font-weight-bold form-label-container col-lg-3 pt-2\">\r\n                          <label htmlFor=\"email\">Confirm New Password</label>\r\n                        </div>\r\n                        <div className=\"col-lg-9 pt-2\">\r\n                          <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm new password\"\r\n                            name=\"confirmPasswordNew\"\r\n                            value={values.confirmPasswordNew}\r\n                            onChange={handleChange}\r\n                            isValid={\r\n                              !!touched.confirmPasswordNew &&\r\n                              !errors.confirmPasswordNew\r\n                            }\r\n                            isInvalid={\r\n                              !!errors.confirmPasswordNew &&\r\n                              !!touched.confirmPasswordNew\r\n                            }\r\n                          />\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            {errors.confirmPasswordNew}\r\n                          </Form.Control.Feedback>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer className=\"col-lg-12\">\r\n                <Button variant=\"light\" onClick={handleClose}>\r\n                  Close\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"primary\"\r\n                  disabled={disabledButton === true}\r\n                >\r\n                  <div className=\"d-flex d-inline-block justify-content-center\">\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mt-1 mr-2\"\r\n                      role=\"status\"\r\n                      style={{\r\n                        display:\r\n                          disabledButton === true ? \"inline-block\" : \"none\",\r\n                      }}\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                    {disabledButton === true ? (\r\n                      \" Saving, please wait...\"\r\n                    ) : (\r\n                      <>\r\n                        <Icon.Check2Square className=\"mt-1\" />\r\n                        &nbsp;&nbsp;\r\n                        <span>Change Password</span>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalChangePassword;\r\n",["279","280"],"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\SubmitAndClearDataButtons.js",[],"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\UserName\\childrenComponents\\YoutubeEmbedVideo.js",[],"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\UserName\\childrenComponents\\SocialMedia.js",["281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307"],"import React from \"react\";\r\n\r\nexport const SocialMedia = ({\r\n  socialMedia,\r\n  YoutubeIcon,\r\n  TwitterIcon,\r\n  WhatsappIcon,\r\n  InstagramIcon,\r\n  FacebookIcon,\r\n  EmailIcon,\r\n  PhoneIcon,\r\n  SnapchatIcon,\r\n  SoundcloudIcon,\r\n  LinkedinIcon,\r\n  TiktokIcon,\r\n  SpotifyIcon,\r\n  AppleMusicIcon,\r\n  VenmoIcon,\r\n  CashappIcon,\r\n  WebsiteIcon,\r\n  PaypalIcon,\r\n  TelegramIcon,\r\n  OnlyFansIcon,\r\n  GoFundMeIcon,\r\n  TwitchIcon,\r\n  DiscordIcon,\r\n  HousePartyIcon,\r\n  SmsIcon,\r\n  convertStringWithPlus,\r\n  MapPinIcon,\r\n}) => {\r\n  return (\r\n    <div className=\"row d-flex justify-content-center h5\">\r\n      {socialMedia.map((elemento, index) =>\r\n        (elemento.socialNetwork != \"CustomURL\" && elemento.socialNetwork != \"Embed Youtube Video\") ? (\r\n          <div key={index} className=\"border border-link m-2 col-3\">\r\n            {\r\n              /*Según la red que responde el servicio,\r\n              condicionamos que red social mostrar*/\r\n              elemento.socialNetwork === \"Youtube\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={YoutubeIcon}\r\n                        alt=\"Youtube\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">Youtube</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"Twitter\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={\"https://www.twitter.com/\" + elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={TwitterIcon}\r\n                        alt=\"Twitter\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">Twitter</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"Whatsapp\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={\"https://wa.me/\" + elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={WhatsappIcon}\r\n                        alt=\"Whatsapp\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">Whatsapp</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"Instagram\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={\"https://www.instagram.com/\" + elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={InstagramIcon}\r\n                        alt=\"Instagram\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">Instagram</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"Facebook\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={FacebookIcon}\r\n                        alt=\"Facebook\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">Facebook</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"Email\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={\"mailto:\" + elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img width=\"50\" height=\"50\" src={EmailIcon} alt=\"Email\" />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">Email</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"Phone Number\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={\"tel:\" + elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img width=\"50\" height=\"50\" src={PhoneIcon} alt=\"Phone\" />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">Phone Number</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"Snapchat\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={\"https://www.snapchat.com/add/\" + elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={SnapchatIcon}\r\n                        alt=\"Snapchat\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">Snapchat</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"Soundcloud\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={\"https://www.soundcloud.com/\" + elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={SoundcloudIcon}\r\n                        alt=\"Soundcloud\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">Soundcloud</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"Linkedin\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={LinkedinIcon}\r\n                        alt=\"Linkedin\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">Linkedin</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"TikTok\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={TiktokIcon}\r\n                        alt=\"Tiktok\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">TikTok</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"Spotify\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={\"https://www.spotify.com/\" + elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={SpotifyIcon}\r\n                        alt=\"Spotify\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">Spotify</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"Apple Music\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={\"https://music.apple.com/\" + elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={AppleMusicIcon}\r\n                        alt=\"Apple Music\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">Apple Music</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"Venmo\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={\"https://www.venmo.com/\" + elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img width=\"50\" height=\"50\" src={VenmoIcon} alt=\"Venmo\" />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">Venmo</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"CashApp\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={\"https://cash.app/$\" + elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={CashappIcon}\r\n                        alt=\"CashApp\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">CashApp</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"Website\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={WebsiteIcon}\r\n                        alt=\"Website\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">Website</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"Paypal\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={\"https://www.paypal.com/paypalme/\" + elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={PaypalIcon}\r\n                        alt=\"Paypal\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">Paypal</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"OnlyFans\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={\"https://onlyfans.com/\" + elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={OnlyFansIcon}\r\n                        alt=\"OnlyFans\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">OnlyFans</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"GoFundMe\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={GoFundMeIcon}\r\n                        alt=\"GoFundMe\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">GoFundMe</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"Twitch\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={\"https://twitch.tv/\" + elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={TwitchIcon}\r\n                        alt=\"Twitch\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">Twitch</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"Discord\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={DiscordIcon}\r\n                        alt=\"Discord\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">Discord</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"HouseParty\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={\"https://houseparty.com/add/\" + elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={HousePartyIcon}\r\n                        alt=\"HouseParty\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">HouseParty</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"Telegram\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={\"https://t.me/\" + elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={TelegramIcon}\r\n                        alt=\"Telegram\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">Telegram</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"SMS\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={\"sms:\" + elemento.profile}\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img width=\"50\" height=\"50\" src={SmsIcon} alt=\"Sms\" />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">SMS</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : elemento.socialNetwork === \"Address\" ? (\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={\r\n                    \"https://google.com/maps/search/\" +\r\n                    convertStringWithPlus(elemento.profile)\r\n                  }\r\n                >\r\n                  <div className=\"pt-3 pb-3\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <img\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        src={MapPinIcon}\r\n                        alt=\"Instagram\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <div className=\"d-none d-sm-block\">Address</div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              ) : (\r\n                <></>\r\n              )\r\n            }\r\n          </div>\r\n        ) : null\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\UserName\\childrenComponents\\CustomLink.js",["308"],"import React from \"react\";\r\n\r\nexport const CustomLink = ({ socialMedia, CustomURLIcon }) => {\r\n  return (\r\n    <>\r\n      {socialMedia.map((elemento, index) => (\r\n        <div key={index}>\r\n          {elemento.socialNetwork === \"CustomURL\" ? (\r\n            <div className=\"row d-flex justify-content-center h5\">\r\n              <div className=\"border p-2 border-link col-10\">\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={elemento.profile}\r\n                >\r\n                  <div className=\"d-flex col-lg-12 justify-content-center\">\r\n                    <img\r\n                      style={{ marginTop: \"6px\" }}\r\n                      width=\"25\"\r\n                      height=\"25\"\r\n                      src={CustomURLIcon}\r\n                      alt=\"CustomURL\"\r\n                    />\r\n                    &nbsp;\r\n                    {elemento.linkName}\r\n                  </div>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\SendNotifications.js",["309"],"import React, { useState } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\n\r\nfunction ActivateNotifications({ sendNotifications, setSendNotifications }) {\r\n  const sendEmailNotifications = (e) => {\r\n    //alert(e.target.checked);\r\n    setSendNotifications(e.target.checked);\r\n  };\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <Form.Label\r\n        className=\"text-white form-label pb-0 mb-0\"\r\n        htmlFor=\"basic-url\"\r\n      >\r\n        Activate GPS Notifications:\r\n      </Form.Label>\r\n      <InputGroup>\r\n        <Form.Check\r\n          type=\"switch\"\r\n          name=\"ActivateNotifications\"\r\n          id=\"custom-switch\"\r\n          label={\r\n            sendNotifications ? (\r\n              <b className=\"text-success\"> Enabled </b>\r\n            ) : (\r\n              <b className=\"text-warning\"> Disabled </b>\r\n            )\r\n          }\r\n          checked={sendNotifications === true ? true : false}\r\n          onChange={(e) => {\r\n            sendEmailNotifications(e);\r\n          }}\r\n        />\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActivateNotifications;\r\n",["310","311"],"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\LinkToAnotherProfile.js",[],"C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\index.js",[],["312","313"],"C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\MainApp.js",[],"C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\AppRoute.js",[],"C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\components\\History.js",[],"C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\components\\AppContext.js",[],"C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\CreateYourProfile\\index.js",["314"],"C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\EditProfile\\index.js",["315","316","317","318","319"],"C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\Login\\index.js",["320"],"import React, { useState, useContext } from \"react\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Swal from \"sweetalert2\";\r\nimport history from \"../../../components/History\";\r\nimport LogoWhite from \"../../../assets/images/logo-white.png\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport axios from \"axios\";\r\nimport helpers from \"../../../components/Helpers\";\r\nimport { AppContext } from \"../../../components/AppContext\";\r\n\r\nconst { swalOffBackend } = helpers;\r\n\r\nconst schema = Yup.object({\r\n  email: Yup.string()\r\n    .required(\"Email is required\")\r\n    .email(\"Incorrect email format\"),\r\n  password: Yup.string()\r\n    .required(\"Password is required\")\r\n    .matches(/^\\S*$/, \"Password can't have spaces.\"),\r\n});\r\n\r\nexport const Login = () => {\r\n  const { loginContext } = useContext(AppContext);\r\n\r\n  const [disabledButton, setDisabledButton] = useState(false);\r\n\r\n  const onSubmit = (event) => {\r\n    const { email, password } = event;\r\n\r\n    setDisabledButton(true);\r\n\r\n    const payload = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    axios\r\n      .post(`/auth/login`, payload)\r\n      .then((res) => {\r\n        const { ok, msg, token, name, userid } = res.data;\r\n\r\n        /*Sí el login es ok, loguea*/\r\n        if (ok && msg === \"login\") {\r\n          setDisabledButton(false);\r\n\r\n          const json = {\r\n            authenticated: true,\r\n            userName: name,\r\n            token: token,\r\n          };\r\n\r\n          loginContext(json);\r\n          axios.defaults.headers.common[\"x-token\"] = res.data.token;\r\n          //axios.defaults.headers.common[\"x-token\"] = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImpsemQxOTk0QGdtYWlsLmNvbSIsInVzZXJpZCI6IjYwZWUyZTk0NTMyZWJkMjRkYzFkNWNmNCIsImlhdCI6MTYyNjU3ODYxOCwiZXhwIjoxNjI2NTg1ODE4fQ.QxQllK-jAbBwRrmSuT_G1IxCeuK9wtmr0xMmfmxpgLU\"\r\n          history.push(\"/edit-profile\");\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        /*Sí los servicios están OFF, retornamos este swal*/\r\n        if (e.response === undefined) {\r\n          swalOffBackend();\r\n          setDisabledButton(false);\r\n          return 1;\r\n        }\r\n\r\n        /*Si ocurre algo en el request, retoramos esto*/\r\n        const { msg, ok } = e.response.data;\r\n        if (!ok) {\r\n          Swal.fire({\r\n            title: \"Error\",\r\n            text: msg,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Try again\",\r\n          });\r\n        }\r\n\r\n        setDisabledButton(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-login\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <div className=\"card-login\">\r\n            <div className=\"card-header\">\r\n              <h3>Sign in</h3>\r\n              <div className=\"d-flex justify-content-end social_icon\">\r\n                <img className=\"logo-login\" src={LogoWhite} alt=\"Logo\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <Formik\r\n                validationSchema={schema}\r\n                // onSubmit={(values, { resetForm }) => {\r\n                //   onSubmit(values);\r\n                //   resetForm({ values: null });\r\n                // }}\r\n                onSubmit={onSubmit}\r\n                initialValues={{\r\n                  //email: \"miguelgarciaparedes22@gmail.com\",\r\n                  //password: \"12345678\",\r\n                email: \"\",\r\n                  password: \"\"\r\n                }}\r\n              >\r\n                {({\r\n                  handleSubmit,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  setFieldValue,\r\n                  values,\r\n                  touched,\r\n                  isValid,\r\n                  errors,\r\n                }) => (\r\n                  <Form\r\n                    onSubmit={handleSubmit}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                    name=\"addServiceData\"\r\n                    id=\"addServiceData\"\r\n                  >\r\n                    <InputGroup className=\"mb-2\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <Icon.PersonBoundingBox />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Example: johndoe@example.com\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleChange}\r\n                        isValid={!!touched.email && !errors.email}\r\n                        isInvalid={!!errors.email && !!touched.email}\r\n                        className=\"lowercase\"\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.email}\r\n                      </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                    <InputGroup className=\"mb-2\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <Icon.KeyFill />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Enter your password\"\r\n                        name=\"password\"\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                        isValid={!!touched.password && !errors.password}\r\n                        isInvalid={!!errors.password && !!touched.password}\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.password}\r\n                      </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                    <InputGroup>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"primary\"\r\n                        disabled={disabledButton === true}\r\n                        block\r\n                      >\r\n                        <div className=\"d-flex d-inline-block justify-content-center\">\r\n                          <span\r\n                            className=\"spinner-border spinner-border-sm mt-1 mr-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                              display:\r\n                                disabledButton === true\r\n                                  ? \"inline-block\"\r\n                                  : \"none\",\r\n                            }}\r\n                            aria-hidden=\"true\"\r\n                          ></span>\r\n                          {disabledButton === true\r\n                            ? \" Loading, please wait...\"\r\n                            : \"Login\"}\r\n                        </div>\r\n                      </Button>\r\n                    </InputGroup>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <div className=\"d-flex justify-content-center text-white\">\r\n                Don't have an account? &nbsp;\r\n                <a href=\"/create-profile\"> Sign Up</a>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <a href=\"/forgot-password\">Forgot your password?</a>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <a href=\"/\">Privacy Policy and Terms of Service</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\UserName\\index.js",["321","322","323","324","325","326","327","328","329","330","331"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Button, Overlay, Tooltip } from \"react-bootstrap\";\r\nimport userImage from \"../../../assets/images/default-user-image.png\";\r\nimport logoImage from \"../../../assets/images/logo-white.png\";\r\nimport noBanner from \"../../../assets/images/no-banner.jpg\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport history from \"../../../components/History\";\r\nimport axios from \"axios\";\r\nimport helpers from \"../../../components/Helpers\";\r\nimport { SpinnerLoading } from \"../../../components/SpinnerLoading\";\r\n\r\n/*Iconos que no están en boostrap-icons.css*/\r\nimport YoutubeIcon from \"../../../assets/svg/youtube.svg\";\r\nimport InstagramIcon from \"../../../assets/svg/instagram.svg\";\r\nimport TwitterIcon from \"../../../assets/svg/twitter.svg\";\r\nimport FacebookIcon from \"../../../assets/svg/facebook.svg\";\r\nimport LinkedinIcon from \"../../../assets/svg/linkedin.svg\";\r\nimport SnapchatIcon from \"../../../assets/svg/snapchat.svg\";\r\nimport AppleMusicIcon from \"../../../assets/svg/apple-music.svg\";\r\nimport CashappIcon from \"../../../assets/svg/cashapp.svg\";\r\nimport SoundcloudIcon from \"../../../assets/svg/soundcloud.svg\";\r\nimport SpotifyIcon from \"../../../assets/svg/spotify.svg\";\r\nimport TiktokIcon from \"../../../assets/svg/tiktok.svg\";\r\nimport VenmoIcon from \"../../../assets/svg/venmo.svg\";\r\nimport PaypalIcon from \"../../../assets/svg/paypal.svg\";\r\nimport MapPinIcon from \"../../../assets/svg/locationmap.svg\";\r\nimport EmailIcon from \"../../../assets/svg/mail.svg\";\r\nimport WhatsappIcon from \"../../../assets/svg/whatsapp.svg\";\r\nimport TelegramIcon from \"../../../assets/svg/telegram.svg\";\r\nimport GoFundMeIcon from \"../../../assets/svg/gofundme.svg\";\r\nimport TwitchIcon from \"../../../assets/svg/twitch.svg\";\r\nimport OnlyFansIcon from \"../../../assets/svg/onlyfans.svg\";\r\nimport DiscordIcon from \"../../../assets/svg/discord.svg\";\r\nimport HousePartyIcon from \"../../../assets/svg/houseparty.svg\";\r\nimport SmsIcon from \"../../../assets/svg/sms.svg\";\r\nimport PhoneIcon from \"../../../assets/svg/phone.svg\";\r\nimport WebsiteIcon from \"../../../assets/svg/website.svg\";\r\nimport CustomURLIcon from \"../../../assets/svg/customurl.svg\";\r\n\r\n//Componentes hijos\r\nimport { SocialMedia } from \"./childrenComponents/SocialMedia\";\r\nimport { CustomLink } from \"./childrenComponents/CustomLink\";\r\nimport { YoutubeEmbedVideo } from \"./childrenComponents/YoutubeEmbedVideo\";\r\n\r\nconst { swalOffBackend, convertStringWithPlus, copyToClipboard } = helpers;\r\nconst QRCode = require(\"qrcode.react\");\r\n\r\n/*Componente para manejar nombre del usuario*/\r\nexport const UserName = ({ location }) => {\r\n  const [profileName, setProfileName] = useState(\"\");\r\n  const [profileBio, setProfileBio] = useState(\"\");\r\n  const [socialMedia, setSocialMedia] = useState([]);\r\n  const [loadingProfileData, setLoadingProfileData] = useState(true); //Animación cargando datos de perfil\r\n  \r\n  const [base64ImgProfile, setBase64ImgProfile] = useState(\"\");\r\n  const [base64ImgBanner, setBase64ImgBanner] = useState(\"\");\r\n\r\n  const [isLinked, setIsLinked] = useState(false);\r\n  const [usernameLinked, setUsernameLinked] = useState(\"\");\r\n\r\n  const [sendNotifications2, setSendNotifications2] = useState(false);\r\n  const [emailProfile, setEmailProfile] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(null);\r\n\r\n  const { pathname } = location;\r\n  const username = pathname.replace(\"/\", \"\");\r\n\r\n  const payload = {\r\n    username: username /*Puede ser el usuario o el nro de serial*/,\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"/users/usernameData\", payload)\r\n      .then((res) => {\r\n        const { ok, msg, data, email } = res.data;\r\n\r\n        if (ok && msg === \"Username Profile Data found.\") {\r\n         \r\n          const {\r\n            profileFullName,\r\n            profileBio,\r\n            socialMedia,\r\n            base64ProfilePhoto,\r\n            base64BannerPhoto,\r\n            sendNotifications,\r\n          } = data;\r\n          setProfileName(profileFullName);\r\n          setSocialMedia(socialMedia);\r\n          setProfileBio(profileBio);\r\n\r\n          /*********PINTAMOS LA FOTO O EL BANNER***************/\r\n          /* Depende de lo que retorne el servicio, pintamos ya sea el icon del perfil gris o\r\n          * pintamos la ruta guardada como key en s3 de la imagen\r\n          */\r\n          if(base64ProfilePhoto === \"\"){\r\n            setBase64ImgProfile(userImage);\r\n          }else{\r\n            setBase64ImgProfile(`${process.env.REACT_APP_API_URL}/render/image/${base64ProfilePhoto}`);\r\n          }\r\n          if(base64BannerPhoto === \"\"){\r\n            setBase64ImgBanner(noBanner);\r\n          }else{\r\n             setBase64ImgBanner(`${process.env.REACT_APP_API_URL}/render/image/${base64BannerPhoto}`);\r\n          }\r\n          /***************************************************** */\r\n\r\n          //Guardamos esto en una variable (no se usa de momento)\r\n          setSendNotifications2(sendNotifications);\r\n          //Envío el valor a ver si se va a enviar correo o no\r\n          sendEmailNotifications(sendNotifications, email);\r\n\r\n          setLoadingProfileData(false);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        if (e.response === undefined) {\r\n          swalOffBackend();\r\n          setLoadingProfileData(false);\r\n          history.push(\"/\");\r\n          return 1;\r\n        }\r\n\r\n        const { msg, ok } = e.response.data;\r\n        if (!ok) {\r\n          Swal.fire({\r\n            title: \"Error\",\r\n            text: msg,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Try again\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              history.push(\"/login\");\r\n            } else {\r\n              history.push(\"/login\");\r\n            }\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const sendEmailNotifications = (value, email) => {\r\n    \r\n    if (value === true) {\r\n      //Si el valor que recibe es true entonces enviamos el correo\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        console.log(\"Latitude is :\", position.coords.latitude);\r\n        console.log(\"Longitude is :\", position.coords.longitude);\r\n\r\n        const payloadToSendNotifications = {\r\n          to: email,\r\n          latitude: position.coords.latitude,\r\n          longitude:  position.coords.longitude,\r\n        }\r\n\r\n        console.log(payloadToSendNotifications)\r\n\r\n        axios.post(\"email/sendNotification\", payloadToSendNotifications).then((res) => {\r\n          if(res.data.ok === true){\r\n            console.log(\"Correo fue enviado\");\r\n          }else{\r\n            console.log(\"Correo no fue enviado\");\r\n          }\r\n        }).catch((error)=> {console.log(\"Ha ocurrido un error al enviar correo\")});\r\n      });\r\n    } else {\r\n      console.log(\"Notifications disabled\");\r\n    }\r\n  };\r\n\r\n  const viewPrivateLinks = () => {\r\n    Swal.fire({\r\n      title: \"PIN\",\r\n      html: `<input type=\"password\" placeholder=\"PIN to unlock private information\" \r\n            className=\"swal2-input\" maxLength=\"4\">`,\r\n      icon: \"warning\",\r\n      confirmButtonText: \"OK\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loadingProfileData === true ? (\r\n        <SpinnerLoading />\r\n      ) : (\r\n        <div>\r\n          {\r\n            //style={{ width: \"100%\" }}\r\n          }\r\n          <div\r\n            // style={{\r\n            //   backgroundColor: \"#424242\",\r\n            //   height: \"200px\",\r\n            //   width: \"100%\",\r\n            // }}\r\n            className=\"banner-with-no-image\"\r\n          >\r\n            <img\r\n              src={base64ImgBanner}\r\n              className=\"banner w-100\"\r\n              alt=\"backgroundImageProfile\"\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"col-sm-12 card-body\"\r\n            style={{ backgroundColor: \"white\" }}\r\n          >\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"box\">\r\n                <img\r\n                  src={base64ImgProfile}\r\n                  className=\"img-profile\"\r\n                  alt=\"ProfilePhoto\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row h5 mt-3\">\r\n              <div className=\"col-12 d-flex justify-content-center\">\r\n                <h3 className=\"font-bold\">{profileName}</h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row text-center h5\">\r\n              <div className=\"col-12 d-flex justify-content-center\">\r\n                <h5>{profileBio}</h5>\r\n              </div>\r\n            </div>\r\n\r\n            {/*<div className=\"row\">\r\n                    <div className=\"col-sm-12 text-center\">\r\n                        <a  href=\"/edit-profile\" className=\"mr-2 btn btn-primary btn-sm center-block\" style={{width: \"100px\"}}>Edit Profile</a>\r\n                        <a className=\"ml-2 btn btn-primary btn-sm center-block\" style={{width: \"100px\"}}>Sign Out</a>\r\n                    </div>\r\n        </div>*/}\r\n\r\n            <YoutubeEmbedVideo socialMedia={socialMedia} />\r\n\r\n            {/*Componente de redes sociales visualizadas en el perfil*/}\r\n            <SocialMedia\r\n              socialMedia={socialMedia}\r\n              YoutubeIcon={YoutubeIcon}\r\n              TwitterIcon={TwitterIcon}\r\n              WhatsappIcon={WhatsappIcon}\r\n              InstagramIcon={InstagramIcon}\r\n              FacebookIcon={FacebookIcon}\r\n              EmailIcon={EmailIcon}\r\n              PhoneIcon={PhoneIcon}\r\n              SnapchatIcon={SnapchatIcon}\r\n              SoundcloudIcon={SoundcloudIcon}\r\n              LinkedinIcon={LinkedinIcon}\r\n              TiktokIcon={TiktokIcon}\r\n              SpotifyIcon={SpotifyIcon}\r\n              AppleMusicIcon={AppleMusicIcon}\r\n              VenmoIcon={VenmoIcon}\r\n              CashappIcon={CashappIcon}\r\n              WebsiteIcon={WebsiteIcon}\r\n              PaypalIcon={PaypalIcon}\r\n              TelegramIcon={TelegramIcon}\r\n              OnlyFansIcon={OnlyFansIcon}\r\n              GoFundMeIcon={GoFundMeIcon}\r\n              TwitchIcon={TwitchIcon}\r\n              DiscordIcon={DiscordIcon}\r\n              HousePartyIcon={HousePartyIcon}\r\n              SmsIcon={SmsIcon}\r\n              convertStringWithPlus={convertStringWithPlus}\r\n              MapPinIcon={MapPinIcon}\r\n            />\r\n\r\n            {/*Componentes de links customizados al visualizar el perfil*/}\r\n            <CustomLink\r\n              socialMedia={socialMedia}\r\n              CustomURLIcon={CustomURLIcon}\r\n            />\r\n\r\n            {/*Botón Copiar Link*/}\r\n            <div className=\"row p-2\">\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <div className=\"border p-3 border-link\">\r\n                    <Button\r\n                      ref={target}\r\n                      onClick={() => {\r\n                        setShow(!show);\r\n                        copyToClipboard(username);\r\n                      }}\r\n                    >\r\n                      <span>\r\n                        <i className=\"bi bi-clipboard\" />\r\n                      </span>\r\n                      &nbsp; Copy Link\r\n                    </Button>\r\n                    <Overlay\r\n                      target={target.current}\r\n                      show={show}\r\n                      placement=\"top\"\r\n                    >\r\n                      {(props) => (\r\n                        <Tooltip id=\"overlay-example\" {...props}>\r\n                          Profile copied to clipboard!\r\n                        </Tooltip>\r\n                      )}\r\n                    </Overlay>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/*Botón Copiar Link*/}\r\n            <div className=\"row p-2\">\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <div className=\"border p-3 border-link\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <h5 className=\"font-bold pb-3\">QR Code</h5>\r\n                    </div>\r\n                    <QRCode\r\n                      id=\"QR\"\r\n                      value={\"https://profile.stdicompany.com/\" + username}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row p-3\">\r\n              <div className=\"col-lg-12\">\r\n                <div id=\"map\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"alert-information\">\r\n            <div className=\"col-12\">\r\n              <div className=\"d-flex justify-content-center\">\r\n                <a\r\n                  className=\"text-white font-bold\"\r\n                  href=\"https://shop.stdicompany.com/\"\r\n                  target=\"_blank\"\r\n                >\r\n                  STDI rocks, right? Tap here to get yours.\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"pt-3 text-white\">\r\n            <div className=\"col-12 col-sm-12\">\r\n              <div className=\"d-flex justify-content-center\">\r\n                <a href=\"https://www.stdicompany.com/\">\r\n                  <img className=\"img-profile-logo\" src={logoImage} />\r\n                </a>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center mt-2\">\r\n                <h5 className=\"font-bold\">STDI Company</h5>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <h6>All features registered &copy;</h6>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Comantado ya que se usará para la info privada\r\n            <div className=\"row d-flex justify-content-center h5\">\r\n                <div className=\"m-2 card col-sm-3\" onClick={viewPrivateLinks} style={{cursor: 'pointer'}}>\r\n                    <div className=\"card-body\">\r\n                        <span className=\"btn-sm\" style={{backgroundColor: 'black', \r\n                            borderRadius: '15px',\r\n                            textAlign: 'center', color: 'white' }}\r\n                        >\r\n                        <i className=\"bi bi-lock-fill\"></i></span>\r\n                        &#160;<label style={{ color: \"black\" }}> Private</label>\r\n                    </div>\r\n                </div>\r\n            </div>*/}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\ForgotPassword\\index.js",[],"C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\components\\Helpers.js",[],"C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\components\\SpinnerLoading.js",["332"],"C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\ModalChangePassword.js",["333"],"C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\NoDymanicForm.js",["334","335","336"],"import React, { useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Form, InputGroup, Alert, Button } from \"react-bootstrap\";\r\n\r\n//Componente Hijo\r\nimport SendNotifications from \"./SendNotifications\";\r\nimport LinkToAnotherProfile from \"./LinkToAnotherProfile\";\r\n\r\nfunction NoDymanicForm({\r\n  nameState,\r\n  bioState,\r\n  sendNotifications,\r\n  setSendNotifications,\r\n  username,\r\n  isLinked,\r\n  setIsLinked,\r\n  usernameLinked,\r\n  disabledButton,\r\n  reader,\r\n  reader2,\r\n  handleNameChange,\r\n  handleBioChange,\r\n  handleOnAdd,\r\n  onSubmit,\r\n  clearData,\r\n  setBase64ImgBanner,\r\n  setImgProfileToUpload,\r\n  setImgBannerToUpload,\r\n}) {\r\n  const [socialMediaState, setSocialMediaState] = useState(\"\");\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, { resetForm }) => {\r\n        onSubmit(values);\r\n        resetForm({ values: null });\r\n      }}\r\n      initialValues={{\r\n        fullName: nameState,\r\n        bio: bioState,\r\n        socialMedia: null,\r\n      }}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        handleBlur,\r\n        setFieldValue,\r\n        values,\r\n        touched,\r\n        isValid,\r\n        errors,\r\n      }) => (\r\n        <Form\r\n          onSubmit={handleSubmit}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          name=\"addProfileData\"\r\n          id=\"addProfileeData\"\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-sm-12\">\r\n              {/*Inicio Campo Profile Fullname*/}\r\n              <Form.Label className=\"text-white form-label\" htmlFor=\"basic-url\">\r\n                Profile Full Name:\r\n              </Form.Label>\r\n              <InputGroup className=\"mb-2\">\r\n                <Form.Control\r\n                  name=\"fullName\"\r\n                  //values={values.fullName}\r\n                  defaultValue={nameState}\r\n                  type=\"text\"\r\n                  placeholder=\"Type your profile name\"\r\n                  onChange={handleNameChange}\r\n                />\r\n              </InputGroup>\r\n              {/*Fin Campo Profile Fullname*/}\r\n              {/*Inicio Campo Profile Photo*/}\r\n              <InputGroup className=\"mb-2\">\r\n                <Form.Group controlId=\"formFile\" className=\"mb-2\">\r\n                  <Form.Label className=\"text-white form-label\">\r\n                    Profile Photo:\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"file\"\r\n                    onChange={(e) => {\r\n                      if (e.target.files.length > 0) {\r\n                        if (\r\n                          e.target.files[0].type === \"image/jpeg\" ||\r\n                          e.target.files[0].type === \"image/jpg\" ||\r\n                          e.target.files[0].type === \"image/png\" ||\r\n                          e.target.files[0].type === \"image/gif\"\r\n                        ) {\r\n                          /*Acá seteamos el perfil para enviarlo por formData (no en base64) */\r\n                          setImgProfileToUpload(e.target.files[0]);\r\n\r\n                          reader.readAsDataURL(e.target.files[0]);\r\n                        } else {\r\n                          Swal.fire({\r\n                            title: \"Unsupported format\",\r\n                            text: \"Format supported: JPG, JPEG, PNG and GIF.\",\r\n                            icon: \"info\",\r\n                            confirmButtonText: \"OK\",\r\n                          });\r\n                        }\r\n                      } else {\r\n                        setBase64ImgBanner(\"\");\r\n                      }\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </InputGroup>\r\n              {/*Fin Campo Profile Photo*/}\r\n              {/*Inicio Campo Banner Photo*/}\r\n              <InputGroup className=\"mb-2\">\r\n                <Form.Group controlId=\"formFile2\" className=\"mb-2\">\r\n                  <Form.Label className=\"text-white form-label\">\r\n                    Banner Photo:\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"file\"\r\n                    accept=\".jpg,.jpeg,.png\"\r\n                    onChange={(e) => {\r\n                      if (e.target.files.length > 0) {\r\n                        if (\r\n                          e.target.files[0].type === \"image/jpeg\" ||\r\n                          e.target.files[0].type === \"image/jpg\" ||\r\n                          e.target.files[0].type === \"image/png\" ||\r\n                          e.target.files[0].type === \"image/gif\"\r\n                        ) {\r\n                          /*Acá guardamos el banner para enviarlo por formData (no formato base64)*/\r\n                          setImgBannerToUpload(e.target.files[0]);\r\n\r\n                          reader2.readAsDataURL(e.target.files[0]);\r\n                        } else {\r\n                          Swal.fire({\r\n                            title: \"Unsupported format\",\r\n                            text: \"Format supported: JPG, JPEG, PNG and GIF.\",\r\n                            icon: \"info\",\r\n                            confirmButtonText: \"OK\",\r\n                          });\r\n                        }\r\n                      } else {\r\n                        setBase64ImgBanner(\"\");\r\n                      }\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </InputGroup>\r\n              {/*Fin Campo Banner Photo*/}\r\n              {/*Inicio Campo Activar Notificaciones*/}\r\n              {/*<SendNotifications\r\n                setSendNotifications={setSendNotifications}\r\n                sendNotifications={sendNotifications}\r\n              />*/}\r\n              {/*Fin Campo Activar Notificaciones*/}\r\n              {/*Inicio Campo Linkear a otro perfil*/}\r\n              {/*<LinkToAnotherProfile\r\n                isLinked={isLinked}\r\n                usernameLinked={usernameLinked}\r\n                username={username}\r\n                setIsLinked={setIsLinked}\r\n              />*7}\r\n              {/*Fin Campo Linkear a otro perfil*/}\r\n              {/*Inicio Campo Profile Bio*/}\r\n              <Form.Label\r\n                className=\"text-white form-label mt-2\"\r\n                htmlFor=\"basic-url\"\r\n              >\r\n                Profile Bio:\r\n              </Form.Label>\r\n              <InputGroup className=\"mb-2\">\r\n                <Form.Control\r\n                  name=\"bio\"\r\n                  //values={values.bio}\r\n                  defaultValue={bioState}\r\n                  as=\"textarea\"\r\n                  placeholder=\"Type your profile name\"\r\n                  onChange={handleBioChange}\r\n                  style={{ height: \"100px\" }}\r\n                />\r\n              </InputGroup>\r\n              {/*Fin Campo Profile Bio*/}\r\n              {/*Inicio Select Social Media Channels*/}\r\n\r\n              <Form.Label className=\"text-white form-label\" htmlFor=\"basic-url\">\r\n                Social Media Channels:\r\n              </Form.Label>\r\n              <Alert variant=\"info\">\r\n                <Icon.ListCheck size={25} />\r\n                &nbsp; Click from the drop down to add the social media link.\r\n              </Alert>\r\n              <InputGroup className=\"mb-2\">\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"socialMedia\"\r\n                  values={values.socialMedia}\r\n                  onChange={(e) => {\r\n                    //if ((e.target.value = \"CustomURL\")) {\r\n                    //}\r\n                    //handleOnAdd(e);\r\n                    //handleSocialMedia(e);\r\n                    setSocialMediaState(e);\r\n                  }}\r\n                >\r\n                  <option value=\"\">Choose your media...</option>\r\n                  <option value=\"Instagram\">Instagram</option>\r\n                  <option value=\"Whatsapp\">Whatsapp</option>\r\n                  <option value=\"Snapchat\">Snapchat</option>\r\n                  <option value=\"Youtube\">Youtube</option>\r\n                  <option value=\"Facebook\">Facebook</option>\r\n                  <option value=\"Soundcloud\">Soundcloud</option>\r\n                  <option value=\"Linkedin\">Linkedin</option>\r\n                  <option value=\"Telegram\">Telegram</option>\r\n                  <option value=\"TikTok\">TikTok</option>\r\n                  <option value=\"Twitter\">Twitter</option>\r\n                  <option value=\"Spotify\">Spotify</option>\r\n                  <option value=\"Apple Music\">Apple Music</option>\r\n                  <option value=\"Venmo\">Venmo</option>\r\n                  <option value=\"CashApp\">CashApp</option>\r\n                  <option value=\"Phone Number\">Phone Number</option>\r\n                  <option value=\"Paypal\">Paypal</option>\r\n                  <option value=\"GoFundMe\">GoFundMe</option>\r\n                  <option value=\"Twitch\">Twitch</option>\r\n                  <option value=\"Discord\">Discord</option>\r\n                  <option value=\"HouseParty\">HouseParty</option>\r\n                  <option value=\"OnlyFans\">OnlyFans</option>\r\n                  <option value=\"Address\">Address</option>\r\n                  <option value=\"Email\">Email</option>\r\n                  <option value=\"SMS\">SMS</option>\r\n                  <option value=\"Website\">Website</option>\r\n                  <option value=\"CustomURL\">CustomURL</option>\r\n                  <option value=\"Embed Youtube Video\">\r\n                    Embed Youtube Video\r\n                  </option>\r\n                </Form.Control>\r\n                <InputGroup.Append>\r\n                  <Button\r\n                    \r\n                    onClick={() => handleOnAdd(socialMediaState)}\r\n                  >\r\n                    <Icon.PlusCircle size={20} className=\"pb-1\" />\r\n                    &nbsp;&nbsp;Add\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </div>\r\n\r\n            {/*<div className=\"col-12 col-sm-12 col-md-6\">\r\n              <InputGroup className=\"mb-2\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"primary\"\r\n                  disabled={disabledButton === true}\r\n                  block\r\n                >\r\n                  <div className=\"d-flex d-inline-block justify-content-center\">\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mt-1 mr-2\"\r\n                      role=\"status\"\r\n                      style={{\r\n                        display:\r\n                          disabledButton === true ? \"inline-block\" : \"none\",\r\n                      }}\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                    {disabledButton === true ? (\r\n                      \" Loading, please wait...\"\r\n                    ) : (\r\n                      <>\r\n                        <Icon.PersonLinesFill className=\"mt-1\" />\r\n                        &nbsp;&nbsp;\r\n                        <span>Save Changes</span>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </Button>\r\n              </InputGroup>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-sm-12 col-md-6\">\r\n              <InputGroup className=\"mb-2\">\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"danger\"\r\n                  onClick={() => clearData()}\r\n                  block\r\n                >\r\n                  <div className=\"d-flex d-inline-block justify-content-center\">\r\n                    <Icon.BackspaceFill className=\"mt-1\" />\r\n                    &nbsp;&nbsp;\r\n                    <span>Clear Data</span>\r\n                  </div>\r\n                </Button>\r\n              </InputGroup>\r\n            </div>\r\n                    */}\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default NoDymanicForm;\r\n","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\Row.js",["337"],"C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\SubmitAndClearDataButtons.js",[],"C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\UserName\\childrenComponents\\CustomLink.js",["338"],"import React from \"react\";\r\n\r\nexport const CustomLink = ({ socialMedia, CustomURLIcon }) => {\r\n  return (\r\n    <>\r\n      {socialMedia.map((elemento, index) => (\r\n        <div key={index}>\r\n          {elemento.socialNetwork === \"CustomURL\" ? (\r\n            <div className=\"row d-flex justify-content-center h5\">\r\n              <div className=\"border p-2 border-link col-10\">\r\n                <a\r\n                  className=\"btn-no-style\"\r\n                  target=\"_blank\"\r\n                  href={elemento.profile}\r\n                >\r\n                  <div className=\"d-flex col-lg-12 justify-content-center\">\r\n                    <img\r\n                      style={{ marginTop: '6px' }}\r\n                      width=\"25\"\r\n                      height=\"25\"\r\n                      src={CustomURLIcon}\r\n                      alt=\"CustomURL\"\r\n                    />\r\n                    &nbsp;\r\n                    {elemento.linkName}\r\n                  </div>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\UserName\\childrenComponents\\YoutubeEmbedVideo.js",[],"C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\UserName\\childrenComponents\\SocialMedia.js",["339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365"],"C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\SendNotifications.js",["366"],"C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\LinkToAnotherProfile.js",[],"C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\components\\SideNavigation.js",["367","368","369","370","371","372","373","374","375","376"],"C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\components\\ModalChangePassword.js",["377","378","379"],"import { useState, useContext } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n//import { AppContext } from \"../../components/common/AppContext\";\r\n\r\nconst schema = Yup.object({\r\n  passwordOld: Yup.string()\r\n    .required(\"Password is required\")\r\n    .min(8, \"Password must have 8 digits\"),\r\n  passwordNew: Yup.string()\r\n    .required(\"New Password is required\")\r\n    .min(8, \"Confirm password must have 8 digits\")\r\n    .notOneOf(\r\n      [Yup.ref(\"passwordOld\"), null],\r\n      \"Password must be different than actual one\"\r\n    )\r\n    .matches(\r\n      /^.*(?=.{6,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\r\n      \"Passwords must have uppercase letters, symbols and numbers\"\r\n    ),\r\n  confirmPasswordNew: Yup.string()\r\n    .oneOf([Yup.ref(\"passwordNew\"), null], \"Passwords must be the same\")\r\n    .required(\"Confirm password is required\"),\r\n});\r\n\r\nfunction ModalChangePassword({ name, username, serialNumber, email }) {\r\n  //const { objLogin } = useContext(AppContext);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [disabledButton, setDisabledButton] = useState(false);\r\n\r\n  const onSubmit = (event) => {\r\n    setDisabledButton(true);\r\n\r\n    const payload = {\r\n      name: name,\r\n      username: username,\r\n      email: email,\r\n      serialNumber: serialNumber,\r\n      password: event.passwordOld,\r\n      newPassword: event.passwordNew,\r\n      confirmNewPassword: event.confirmPasswordNew,\r\n    };\r\n\r\n    axios\r\n      .post(\"/auth/changePassword\", payload)\r\n      .then((res) => {\r\n        if (res.data.ok === false) {\r\n          Swal.fire({\r\n            title: \"There's something wrong\",\r\n            text: res.data.msg,\r\n            icon: \"info\",\r\n            confirmButtonText: \"Ok\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Changes saved succesfully\",\r\n            text: \"\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Ok\",\r\n          });\r\n          handleClose();\r\n          setDisabledButton(false);\r\n        }\r\n\r\n        setDisabledButton(false);\r\n      })\r\n      .catch(function (error) {\r\n        setDisabledButton(false);\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"There's something wrong, please call the admin.\",\r\n        });\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      {/* <Button onClick={handleShow}>\r\n        <Icon.PencilFill /> Change Password\r\n      </Button> */}\r\n\r\n      <a \r\n      onClick={handleShow}\r\n      href=\"javascript:void(0)\"\r\n        >\r\n          <Icon.ShieldExclamation size={22} className=\"mb-1\" /> Change Password\r\n        </a>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Change Password</Modal.Title>\r\n        </Modal.Header>\r\n        <Formik\r\n          validationSchema={schema}\r\n          onSubmit={onSubmit}\r\n          initialValues={{\r\n            passwordOld: \"\",\r\n            passwordNew: \"\",\r\n            confirmPasswordNew: \"\",\r\n          }}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            handleChange,\r\n            values,\r\n            touched,\r\n            isValid,\r\n            errors,\r\n          }) => (\r\n            <Form\r\n              noValidate\r\n              onSubmit={handleSubmit}\r\n              name=\"login\"\r\n              autoComplete=\"off\"\r\n            >\r\n              <Modal.Body>\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-12 col-lg-12 m-auto\">\r\n                      <div className=\"form-group row pt-2\">\r\n                        <div className=\"font-weight-bold form-label-container col-lg-3\">\r\n                          <label htmlFor=\"run\">Password</label>\r\n                        </div>\r\n                        <div className=\"col-lg-9\">\r\n                          <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Type here your actual password\"\r\n                            name=\"passwordOld\"\r\n                            value={values.passwordOld}\r\n                            onChange={handleChange}\r\n                            isValid={\r\n                              !!touched.passwordOld && !errors.passwordOld\r\n                            }\r\n                            isInvalid={\r\n                              !!errors.passwordOld && !!touched.passwordOld\r\n                            }\r\n                          />\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            {errors.passwordOld}\r\n                          </Form.Control.Feedback>\r\n                        </div>\r\n\r\n                        <div className=\"font-weight-bold form-label-container col-lg-3 pt-2\">\r\n                          <label htmlFor=\"email\">New Password</label>\r\n                        </div>\r\n                        <div className=\"col-lg-9 pt-2\">\r\n                          <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Type here your new password\"\r\n                            name=\"passwordNew\"\r\n                            value={values.passwordNew}\r\n                            onChange={handleChange}\r\n                            isValid={\r\n                              !!touched.passwordNew && !errors.passwordNew\r\n                            }\r\n                            isInvalid={\r\n                              !!errors.passwordNew && !!touched.passwordNew\r\n                            }\r\n                          />\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            {errors.passwordNew}\r\n                          </Form.Control.Feedback>\r\n                        </div>\r\n\r\n                        <div className=\"font-weight-bold form-label-container col-lg-3 pt-2\">\r\n                          <label htmlFor=\"email\">Confirm New Password</label>\r\n                        </div>\r\n                        <div className=\"col-lg-9 pt-2\">\r\n                          <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm new password\"\r\n                            name=\"confirmPasswordNew\"\r\n                            value={values.confirmPasswordNew}\r\n                            onChange={handleChange}\r\n                            isValid={\r\n                              !!touched.confirmPasswordNew &&\r\n                              !errors.confirmPasswordNew\r\n                            }\r\n                            isInvalid={\r\n                              !!errors.confirmPasswordNew &&\r\n                              !!touched.confirmPasswordNew\r\n                            }\r\n                          />\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            {errors.confirmPasswordNew}\r\n                          </Form.Control.Feedback>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer className=\"col-lg-12\">\r\n                <Button variant=\"light\" onClick={handleClose}>\r\n                  Close\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"primary\"\r\n                  disabled={disabledButton === true}\r\n                >\r\n                  <div className=\"d-flex d-inline-block justify-content-center\">\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mt-1 mr-2\"\r\n                      role=\"status\"\r\n                      style={{\r\n                        display:\r\n                          disabledButton === true ? \"inline-block\" : \"none\",\r\n                      }}\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                    {disabledButton === true ? (\r\n                      \" Saving, please wait...\"\r\n                    ) : (\r\n                      <>\r\n                        <Icon.Check2Square className=\"mt-1\" />\r\n                        &nbsp;&nbsp;\r\n                        <span>Change Password</span>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalChangePassword;\r\n","C:\\Users\\migue\\Desktop\\REpo\\profileSTDI\\src\\app\\views\\Dashboard\\index.js",["380"],"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\Dashboard\\index.js",["381","382","383","384"],"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\components\\SideNavigation.js",["385","386","387","388","389","390","391","392","393","394","395"],"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\components\\ModalChangePassword.js",["396","397","398"],"import { useState, useContext } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n//import { AppContext } from \"../../components/common/AppContext\";\r\n\r\nconst schema = Yup.object({\r\n  passwordOld: Yup.string()\r\n    .required(\"Password is required\")\r\n    .min(8, \"Password must have 8 digits\"),\r\n  passwordNew: Yup.string()\r\n    .required(\"New Password is required\")\r\n    .min(8, \"Confirm password must have 8 digits\")\r\n    .notOneOf(\r\n      [Yup.ref(\"passwordOld\"), null],\r\n      \"Password must be different than actual one\"\r\n    )\r\n    .matches(\r\n      /^.*(?=.{6,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\r\n      \"Passwords must have uppercase letters, symbols and numbers\"\r\n    ),\r\n  confirmPasswordNew: Yup.string()\r\n    .oneOf([Yup.ref(\"passwordNew\"), null], \"Passwords must be the same\")\r\n    .required(\"Confirm password is required\"),\r\n});\r\n\r\nfunction ModalChangePassword({ name, username, serialNumber, email }) {\r\n  //const { objLogin } = useContext(AppContext);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [disabledButton, setDisabledButton] = useState(false);\r\n\r\n  const onSubmit = (event) => {\r\n    setDisabledButton(true);\r\n\r\n    const payload = {\r\n      name: name,\r\n      username: username,\r\n      email: email,\r\n      serialNumber: serialNumber,\r\n      password: event.passwordOld,\r\n      newPassword: event.passwordNew,\r\n      confirmNewPassword: event.confirmPasswordNew,\r\n    };\r\n\r\n    axios\r\n      .post(\"/auth/changePassword\", payload)\r\n      .then((res) => {\r\n        if (res.data.ok === false) {\r\n          Swal.fire({\r\n            title: \"There's something wrong\",\r\n            text: res.data.msg,\r\n            icon: \"info\",\r\n            confirmButtonText: \"Ok\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Changes saved succesfully\",\r\n            text: \"\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Ok\",\r\n          });\r\n          handleClose();\r\n          setDisabledButton(false);\r\n        }\r\n\r\n        setDisabledButton(false);\r\n      })\r\n      .catch(function (error) {\r\n        setDisabledButton(false);\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"There's something wrong, please call the admin.\",\r\n        });\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      {/* <Button onClick={handleShow}>\r\n        <Icon.PencilFill /> Change Password\r\n      </Button> */}\r\n\r\n      <a \r\n      onClick={handleShow}\r\n      className=\"mb-3\"\r\n      href=\"javascript:void(0)\"\r\n        >\r\n          <Icon.ShieldExclamation size={22} className=\"mb-1 mr-2\" /> Change Password\r\n        </a>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Change Password</Modal.Title>\r\n        </Modal.Header>\r\n        <Formik\r\n          validationSchema={schema}\r\n          onSubmit={onSubmit}\r\n          initialValues={{\r\n            passwordOld: \"\",\r\n            passwordNew: \"\",\r\n            confirmPasswordNew: \"\",\r\n          }}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            handleChange,\r\n            values,\r\n            touched,\r\n            isValid,\r\n            errors,\r\n          }) => (\r\n            <Form\r\n              noValidate\r\n              onSubmit={handleSubmit}\r\n              name=\"login\"\r\n              autoComplete=\"off\"\r\n            >\r\n              <Modal.Body>\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-12 col-lg-12 m-auto\">\r\n                      <div className=\"form-group row pt-2\">\r\n                        <div className=\"font-weight-bold form-label-container col-lg-3\">\r\n                          <label htmlFor=\"run\">Password</label>\r\n                        </div>\r\n                        <div className=\"col-lg-9\">\r\n                          <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Type here your actual password\"\r\n                            name=\"passwordOld\"\r\n                            value={values.passwordOld}\r\n                            onChange={handleChange}\r\n                            isValid={\r\n                              !!touched.passwordOld && !errors.passwordOld\r\n                            }\r\n                            isInvalid={\r\n                              !!errors.passwordOld && !!touched.passwordOld\r\n                            }\r\n                          />\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            {errors.passwordOld}\r\n                          </Form.Control.Feedback>\r\n                        </div>\r\n\r\n                        <div className=\"font-weight-bold form-label-container col-lg-3 pt-2\">\r\n                          <label htmlFor=\"email\">New Password</label>\r\n                        </div>\r\n                        <div className=\"col-lg-9 pt-2\">\r\n                          <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Type here your new password\"\r\n                            name=\"passwordNew\"\r\n                            value={values.passwordNew}\r\n                            onChange={handleChange}\r\n                            isValid={\r\n                              !!touched.passwordNew && !errors.passwordNew\r\n                            }\r\n                            isInvalid={\r\n                              !!errors.passwordNew && !!touched.passwordNew\r\n                            }\r\n                          />\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            {errors.passwordNew}\r\n                          </Form.Control.Feedback>\r\n                        </div>\r\n\r\n                        <div className=\"font-weight-bold form-label-container col-lg-3 pt-2\">\r\n                          <label htmlFor=\"email\">Confirm New Password</label>\r\n                        </div>\r\n                        <div className=\"col-lg-9 pt-2\">\r\n                          <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm new password\"\r\n                            name=\"confirmPasswordNew\"\r\n                            value={values.confirmPasswordNew}\r\n                            onChange={handleChange}\r\n                            isValid={\r\n                              !!touched.confirmPasswordNew &&\r\n                              !errors.confirmPasswordNew\r\n                            }\r\n                            isInvalid={\r\n                              !!errors.confirmPasswordNew &&\r\n                              !!touched.confirmPasswordNew\r\n                            }\r\n                          />\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            {errors.confirmPasswordNew}\r\n                          </Form.Control.Feedback>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer className=\"col-lg-12\">\r\n                <Button variant=\"light\" onClick={handleClose}>\r\n                  Close\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"primary\"\r\n                  disabled={disabledButton === true}\r\n                >\r\n                  <div className=\"d-flex d-inline-block justify-content-center\">\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mt-1 mr-2\"\r\n                      role=\"status\"\r\n                      style={{\r\n                        display:\r\n                          disabledButton === true ? \"inline-block\" : \"none\",\r\n                      }}\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                    {disabledButton === true ? (\r\n                      \" Saving, please wait...\"\r\n                    ) : (\r\n                      <>\r\n                        <Icon.Check2Square className=\"mt-1\" />\r\n                        &nbsp;&nbsp;\r\n                        <span>Change Password</span>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalChangePassword;\r\n","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\AdvancedTools\\index.js",["399","400","401","402"],"import React, { useState, useContext } from \"react\";\r\nimport { Alert, Form } from \"react-bootstrap\";\r\nimport { SideNavigation } from \"../../../components/SideNavigation\";\r\nimport { AppContext } from \"../../../components/AppContext\";\r\nimport logoImage from \"../../../assets/images/logo-white.png\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\n//Componentes Hijos\r\nimport SendNotifications from \"./childrenComponents/SendNotifications\";\r\nimport LinkToAnotherProfile from \"./childrenComponents/LinkToAnotherProfile\";\r\nimport GallerySetup from \"./childrenComponents/GallerySetup\";\r\nimport CustomImageSetup from \"./childrenComponents/CustomImageSetup\";\r\n\r\nexport const AdvancedTools = () => {\r\n  const { objLogin } = useContext(AppContext);;\r\n  return (\r\n    <>\r\n      <div className=\"container mt-3\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 d-flex justify-content-end\">\r\n            <div className=\"text-white mt-2\">\r\n              {objLogin.username}&nbsp;&nbsp;\r\n            </div>\r\n            <SideNavigation />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-2\">\r\n        <div className=\"container text-white\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h5 className=\"mt-4 mb-3\">Advanced Tools:</h5>\r\n\r\n              <Alert variant=\"info\">\r\n                <Icon.InfoCircleFill className=\"mb-1\" size={20} />\r\n                &nbsp;\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n                eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\r\n                enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\r\n                in reprehenderit in voluptate velit esse cillum dolore eu fugiat\r\n                nulla pariatur.\r\n              </Alert>\r\n\r\n              {/*Opción activar notificaciones */}\r\n              <SendNotifications />\r\n\r\n              {/*Opción Linkear a otro perfil */}\r\n              <LinkToAnotherProfile />\r\n\r\n              {/*Opción configurar galería de imágenes */}\r\n              <GallerySetup />\r\n\r\n              {/*Opción configurar custom Image Button */}\r\n              <CustomImageSetup />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"alert-information mt-5\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <a\r\n            className=\"text-white font-bold\"\r\n            href=\"https://shop.stdicompany.com/\"\r\n            target=\"_blank\"\r\n          >\r\n            STDI rocks, right? Tap here to get yours.\r\n          </a>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"pt-3 text-white\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <a href=\"https://www.stdicompany.com/\">\r\n            <img className=\"img-profile-logo\" src={logoImage} />\r\n          </a>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center mt-2\">\r\n          <h5 className=\"font-bold\">STDI Company</h5>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <h6>All features registered &copy;</h6>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\AdvancedTools\\childrenComponents\\SendNotifications.js",[],"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\AdvancedTools\\childrenComponents\\LinkToAnotherProfile.js",["403"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Modal, Form, InputGroup, Button, Alert } from \"react-bootstrap\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport { Formik } from \"formik\";\r\nimport Swal from \"sweetalert2\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { AppContext } from \"../../../../components/AppContext\";\r\nimport { SpinnerLoading } from \"../../../../components/SpinnerLoading\";\r\n\r\nconst schema = Yup.object({\r\n  usernameToBeLinked: Yup.string()\r\n    .required(\"Username is required\")\r\n    .min(8, \"Username must have 8 digits\"),\r\n});\r\n\r\nfunction LinkToAnotherProfile() {\r\n  const { objLogin, setLinkToExistentProfileContext } = useContext(AppContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [isLinked, setIsLinked] = useState(objLogin.isLinked);\r\n  const [isClicked, setIsClicked] = useState(false); //Esta variable la uso para saber si se hizo click en el switch de linkear perfil\r\n  const [disabledButton2, setDisabledButton2] = useState(false);\r\n\r\n  //Variables para modal con info (primero)\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  //Variables para modal con formulario (segundo)\r\n  const [show2, setShow2] = useState(false);\r\n  const handleClose2 = () => setShow2(false);\r\n  const handleShow2 = () => setShow2(true);\r\n\r\n  useEffect(() => {\r\n    if (isClicked === true && isLinked === false) {\r\n      //Si se hizo click la devolvemos a false, así reconocemos cuando se hizo click en caso de deshabilitar o apagar el linkeado\r\n      //de esta manera este use effect solo se activa cuando el usuario haga click en el switch y el resultado de ese click sea deshabilitar\r\n      setIsClicked(false);\r\n      setLoading(true);\r\n      axios\r\n        .post(\"/users/linkingProfile\", {\r\n          username: objLogin.username,\r\n          isLinked: isLinked,\r\n          usernameLinked: \"\",\r\n        })\r\n        .then((res) => {\r\n          //console.log(res.data);\r\n          if (res.data.ok) {\r\n            setLoading(false);\r\n            setLinkToExistentProfileContext(isLinked, \"\");\r\n          } else {\r\n            setLoading(false);\r\n            Swal.fire({\r\n              title: \"Something's wrong :(\",\r\n              text: res.data.msg,\r\n              icon: \"info\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          Swal.fire({\r\n            title: \"Please try again\",\r\n            text: \"\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        });\r\n    } else {\r\n    }\r\n  }, [isClicked,isLinked]);\r\n\r\n  const onSubmitLinkingProfile = (event) => {\r\n    setDisabledButton2(true);\r\n\r\n    setLinkToExistentProfileContext(isLinked, event.usernameToBeLinked);\r\n\r\n    const payloadLinkingProfile = {\r\n      username: objLogin.username,\r\n      isLinked: isLinked,\r\n      usernameLinked: event.usernameToBeLinked,\r\n    };\r\n\r\n    axios\r\n      .post(\"/users/linkingProfile\", payloadLinkingProfile)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.ok) {\r\n          setDisabledButton2(false);\r\n          handleClose2();\r\n          Swal.fire({\r\n            title: \"Changes saved succesfully\",\r\n            text: res.data.msg,\r\n            icon: \"success\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        } else {\r\n          setDisabledButton2(false);\r\n          Swal.fire({\r\n            title: \"Something's wrong :(\",\r\n            text: res.data.msg,\r\n            icon: \"info\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setDisabledButton2(false);\r\n        Swal.fire({\r\n          title: \"Please try again\",\r\n          text: \"\",\r\n          icon: \"error\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      {loading ? <SpinnerLoading /> : null}\r\n      <Form.Label\r\n        className=\"text-white form-label pb-0 mb-0\"\r\n        htmlFor=\"basic-url\"\r\n      >\r\n        Connect an Existing Account:\r\n      </Form.Label>\r\n      <InputGroup>\r\n        <Form.Check\r\n          type=\"switch\"\r\n          name=\"linkToAnotherProfile\"\r\n          id=\"custom-switch-2\"\r\n          label={\r\n            isLinked ? (\r\n              <b className=\"text-success\"> Enabled </b>\r\n            ) : (\r\n              <b className=\"text-warning\"> Disabled </b>\r\n            )\r\n          }\r\n          checked={isLinked === true ? true : false}\r\n          onChange={(e) => {\r\n            setIsLinked(!isLinked);\r\n            setIsClicked(true);\r\n            if (!isLinked) {\r\n              handleShow();\r\n            } else {\r\n            }\r\n          }}\r\n        />\r\n      </InputGroup>\r\n\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>\r\n            <Icon.Diagram2Fill className=\"mb-1\" /> Connecting to existent profile\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12 col-md-12 col-lg-12 m-auto\">\r\n                <Alert variant=\"info\">\r\n                  <Icon.InfoCircleFill className=\"mb-1\" size={20} /> &nbsp; Please read\r\n                  the following info where we explain what does this mean.\r\n                </Alert>\r\n                <p>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\r\n                  do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                  Ut enim ad minim veniam, quis nostrud exercitation ullamco\r\n                  laboris nisi ut aliquip ex ea commodo consequat. Duis aute\r\n                  irure dolor in reprehenderit in voluptate velit esse cillum\r\n                  dolore eu fugiat nulla pariatur. Excepteur sint occaecat\r\n                  cupidatat non proident, sunt in culpa qui officia deserunt\r\n                  mollit anim id est laborum.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer className=\"col-lg-12\">\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => {\r\n              handleClose();\r\n              setIsLinked(false);\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              handleClose();\r\n              handleShow2();\r\n            }}\r\n          >\r\n            Next step\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal\r\n        show={show2}\r\n        onHide={handleClose2}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>Link to an existing profile</Modal.Title>\r\n        </Modal.Header>\r\n        <Formik\r\n          validationSchema={schema}\r\n          onSubmit={onSubmitLinkingProfile}\r\n          initialValues={{\r\n            usernameToBeLinked: objLogin.usernameLinked,\r\n          }}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            handleChange,\r\n            values,\r\n            touched,\r\n            isValid,\r\n            errors,\r\n          }) => (\r\n            <Form\r\n              noValidate\r\n              onSubmit={handleSubmit}\r\n              name=\"login\"\r\n              autoComplete=\"off\"\r\n            >\r\n              <Modal.Body>\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-12 col-lg-12 m-auto\">\r\n                      <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>\r\n                            profile.stdicompany.com/\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          placeholder=\"username\"\r\n                          name=\"usernameToBeLinked\"\r\n                          value={values.usernameToBeLinked}\r\n                          onChange={handleChange}\r\n                          isValid={\r\n                            !!touched.usernameToBeLinked &&\r\n                            !errors.usernameToBeLinked\r\n                          }\r\n                          isInvalid={\r\n                            !!errors.usernameToBeLinked &&\r\n                            !!touched.usernameToBeLinked\r\n                          }\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          {errors.usernameToBeLinked}\r\n                        </Form.Control.Feedback>\r\n                      </InputGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer className=\"col-lg-12\">\r\n                <Button\r\n                  variant=\"light\"\r\n                  onClick={(e) => {\r\n                    handleClose2();\r\n                    setIsLinked(false);\r\n                  }}\r\n                >\r\n                  Close\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"primary\"\r\n                  disabled={disabledButton2 === true}\r\n                >\r\n                  <div className=\"d-flex d-inline-block justify-content-center\">\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mt-1 mr-2\"\r\n                      role=\"status\"\r\n                      style={{\r\n                        display:\r\n                          disabledButton2 === true ? \"inline-block\" : \"none\",\r\n                      }}\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                    {disabledButton2 === true ? (\r\n                      \" Saving, please wait...\"\r\n                    ) : (\r\n                      <>\r\n                        <Icon.Check2Square className=\"mt-1\" />\r\n                        &nbsp;&nbsp;\r\n                        <span>Save Changes</span>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LinkToAnotherProfile;\r\n","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\UserName\\childrenComponents\\ProfileCarousel.js",[],"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\AdvancedTools\\childrenComponents\\GallerySetup.js",["404","405","406"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Modal,\r\n  Form,\r\n  InputGroup,\r\n  Button,\r\n  Alert,\r\n  Carousel,\r\n} from \"react-bootstrap\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport { Formik } from \"formik\";\r\nimport Swal from \"sweetalert2\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { AppContext } from \"../../../../components/AppContext\";\r\nimport { SpinnerLoading } from \"../../../../components/SpinnerLoading\";\r\nimport FormData from \"form-data\";\r\n\r\nfunction GallerySetup() {\r\n  const { objLogin, setGalleryActiveContext, setGalleryImageContext } =\r\n    useContext(AppContext);\r\n  const [gallery, setGallery] = useState([]);\r\n  const [galleryImages, setGalleryImages] = useState([]);\r\n  const [saveGalleryButton, setSaveGalleryButton] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [galleryActive, setGalleryActive] = useState(objLogin.galleryActive);\r\n  const [showModalAmountInputs, setShowModalAmountInputs] = useState(false);\r\n  const [showModalGallery, setShowModalGallery] = useState(false);\r\n  const [amountInputsGallery, setAmountInputsGallery] = useState(0);\r\n  const [arrayToMapInputs, setArrayToMapInputs] = useState([]);\r\n  const [arrayInputsValues, setArrayInputsValues] = useState([]);\r\n  const [arrayURLValues, setArrayURLValues] = useState([]);\r\n\r\n  //Variables para modal con info (primero)\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleCloseModalAmountInputs = () => setShowModalAmountInputs(false);\r\n  const showModalInputs = () => setShowModalAmountInputs(true);\r\n\r\n  //Variables para el uso del carousel\r\n  const [index2, setIndex2] = useState(0);\r\n\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex2(selectedIndex);\r\n  };\r\n\r\n  const schemaModalAmount = Yup.object({\r\n    imagesNumber: Yup.number().required(\"Number of images are required\"),\r\n  });\r\n\r\n  //Este efecto es porque no podemos utilizar variables del objLogin directamente en el flujo\r\n  //da error al salir de la sesión ya que el objLogin, se destruye\r\n  //entonces solo se carga al entrar a esta vista, ya que si entra a esta vista\r\n  //quiere decir que hay una sesión abierta\r\n  useEffect(() => {\r\n    setGalleryImages(objLogin.galleryImages);\r\n  }, []);\r\n\r\n  // const schema = Yup.object().shape({\r\n  //   attachedDocument: Yup.mixed().required(\"At least one file is required\"),\r\n  // });\r\n\r\n  const activateGallery = (e) => {\r\n    setGalleryActive(e.target.checked);\r\n    setGalleryActiveContext(e.target.checked);\r\n    setGalleryActivateOnDataBase(e.target.checked);\r\n  };\r\n\r\n  const setGalleryActivateOnDataBase = (value) => {\r\n    setLoading(true);\r\n    const payload = {\r\n      galleryActive: value,\r\n    };\r\n\r\n    axios\r\n      .post(\"/users/activateGallery\", payload)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        const { ok, msg } = res.data;\r\n        if (!ok && msg === \"Gallery not found.\") {\r\n          Swal.fire({\r\n            title: \"Something happened!\",\r\n            text: \"User without gallery registered.\",\r\n            icon: \"info\",\r\n            confirmButtonText: \"Ok\",\r\n          });\r\n          setGalleryActive(false);\r\n          setGalleryActiveContext(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        Swal.fire({\r\n          title: \"An error occurred!\",\r\n          text: \"Please try again\",\r\n          icon: \"info\",\r\n          confirmButtonText: \"Ok\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const checkFilesFormat = (arrayInputsValues) => {\r\n    //Esta función recorre el arreglo de imágenes buscando\r\n    //archivos adjuntados que tengan formato de imágenes\r\n    //así validamos que los archivos subidos sean solo imágenes\r\n    for (var i = 0; i < arrayInputsValues.length; i++) {\r\n      if (\r\n        arrayInputsValues[i].type === \"image/jpeg\" ||\r\n        arrayInputsValues[i].type === \"image/jpg\" ||\r\n        arrayInputsValues[i].type === \"image/png\"\r\n      ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveGallery = () => {\r\n    //console.log(arrayURLValues);\r\n    setSaveGalleryButton(true);\r\n\r\n    //Primero voy a validar si los formatos de los archivos están correctos\r\n    //enviándole el arreglo de Files seleecionados a esta función\r\n    const checkAttachedFiles = checkFilesFormat(arrayInputsValues);\r\n\r\n    //Aquí valido que hayan sido seleccionado todos los archivos\r\n    if (\r\n      arrayInputsValues.some(\r\n        (elem) => elem.length === 0 || elem.name === \"filename\"\r\n      )\r\n    ) {\r\n      setSaveGalleryButton(false);\r\n      Swal.fire({\r\n        title: \"An error occurred!\",\r\n        text: \"Some files to upload are missing, please tap in every button to upload all the files.\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Ok\",\r\n      });\r\n      //Aquí valido que la funciión que revisa los formatos de los files hayan sido todos formato imagen\r\n    } else if (!checkAttachedFiles) {\r\n      setSaveGalleryButton(false);\r\n      Swal.fire({\r\n        title: \"An error occurred!\",\r\n        text: \"Files format must be .jpg, .jpeg y .png\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Ok\",\r\n      });\r\n    } else {\r\n      //aquí comparo si el usuario ya tiene una galería previamente registrada\r\n      //si gallery viene como null, quiere decir que no hay registros y se porcerá a usar el servicio saveNewGallery\r\n      //por el contrario, si tiene ya registros, solo se deberá modificar el registro que ya tiene guardado.\r\n      if (galleryImages !== null) {\r\n        let formData2 = new FormData();\r\n        formData2.append(\"galleryActive\", objLogin.galleryActive);\r\n        for (var x = 0; x < arrayInputsValues.length; x++) {\r\n          formData2.append(\"galleryImages\", arrayInputsValues[x]);\r\n          formData2.append(\"galleryURL\", arrayURLValues[x]);\r\n        }\r\n\r\n        axios\r\n          .post(\"/users/updateGallery\", formData2, {\r\n            headers: {\r\n              \"content-type\": \"multipart/form-data\",\r\n            },\r\n          })\r\n          .then((res) => {\r\n            setSaveGalleryButton(false);\r\n\r\n            const { ok, msg, newData } = res.data;\r\n            const { galleryImages } = newData;\r\n\r\n            if (ok && msg === \"Gallery updated succesfully.\") {\r\n              Swal.fire({\r\n                title: \"Process succesfully\",\r\n                text: msg,\r\n                icon: \"success\",\r\n                confirmButtonText: \"Ok\",\r\n              });\r\n\r\n              setGalleryActive(true);\r\n              setGalleryActiveContext(true);\r\n              setGalleryImageContext(galleryImages);\r\n              handleClose();\r\n              // document.getElementById(\"attachedDocument\").value = \"\";\r\n              // setFilesLength(0);\r\n            } else {\r\n              Swal.fire({\r\n                title: \"Error\",\r\n                text: msg,\r\n                icon: \"error\",\r\n                confirmButtonText: \"Try again\",\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            setSaveGalleryButton(false);\r\n            Swal.fire({\r\n              title: \"Error\",\r\n              text: \"We are sorry, an error occurred.\",\r\n              icon: \"error\",\r\n              confirmButtonText: \"Try again\",\r\n            });\r\n          });\r\n      } else {\r\n        let formData = new FormData();\r\n        formData.append(\"galleryActive\", true);\r\n        for (var x = 0; x < arrayInputsValues.length; x++) {\r\n          formData.append(\"galleryImages\", arrayInputsValues[x]);\r\n          formData.append(\"galleryURL\", arrayURLValues[x]);\r\n        }\r\n\r\n        axios\r\n          .post(\"/users/saveNewGallery\", formData, {\r\n            headers: {\r\n              \"content-type\": \"multipart/form-data\",\r\n            },\r\n          })\r\n          .then((res) => {\r\n            setSaveGalleryButton(false);\r\n\r\n            const { ok, msg, event } = res.data;\r\n\r\n            if (ok && msg === \"Gallery created succesfully.\") {\r\n              Swal.fire({\r\n                title: \"Process succesfully\",\r\n                text: msg,\r\n                icon: \"success\",\r\n                confirmButtonText: \"Ok\",\r\n              });\r\n\r\n              const { galleryImages } = event;\r\n\r\n              handleClose();\r\n              setGalleryActive(true);\r\n              setGalleryActiveContext(true);\r\n              setGalleryImageContext(galleryImages);\r\n              // document.getElementById(\"attachedDocument\").value = \"\";\r\n              // setFilesLength(0);\r\n            } else {\r\n              Swal.fire({\r\n                title: \"Error\",\r\n                text: msg,\r\n                icon: \"error\",\r\n                confirmButtonText: \"Try again\",\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            Swal.fire({\r\n              title: \"Error\",\r\n              text: \"we are sorry, an error occurred.\",\r\n              icon: \"error\",\r\n              confirmButtonText: \"Try again\",\r\n            });\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const RenderInputsGallery = (event) => {\r\n    //Primero, cerramos el modal que está a la vista\r\n    handleCloseModalAmountInputs();\r\n\r\n    //Segundo, calculamos el valor del arreglo según el primer select\r\n    const amount = event.imagesNumber;\r\n\r\n    if (amount > 0) {\r\n      setAmountInputsGallery(amount);\r\n\r\n      let inputs = [];\r\n      let inputsValues = [];\r\n      let urlValues = [];\r\n      for (let i = 0; i < amount; i++) {\r\n        inputs.push(1);\r\n        inputsValues.push(new File([\"\"], \"filename\"));\r\n        urlValues.push({ url: \"\" });\r\n      }\r\n      setArrayToMapInputs(inputs);\r\n      setArrayInputsValues(inputsValues);\r\n      setArrayURLValues(urlValues);\r\n      setGallery(inputsValues);\r\n    }\r\n\r\n    //Luego mostramos el segundo modal con la cantidad de inputs\r\n    handleShow();\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      {loading ? <SpinnerLoading /> : null}\r\n      <label className=\"font-weight-bold\">\r\n        Set up your gallery:{\" \"}\r\n        {galleryImages === null ? (\r\n          <Icon.EyeSlashFill size={25} />\r\n        ) : (\r\n          <Icon.EyeFill size={25} onClick={() => setShowModalGallery(true)} />\r\n        )}\r\n      </label>\r\n      <InputGroup>\r\n        <Form.Check\r\n          type=\"switch\"\r\n          name=\"galleryActive\"\r\n          id=\"custom-switch-gallery-active\"\r\n          label={\r\n            galleryActive ? (\r\n              <b className=\"text-success\"> Enabled </b>\r\n            ) : (\r\n              <b className=\"text-warning\"> Disabled </b>\r\n            )\r\n          }\r\n          checked={galleryActive === true ? true : false}\r\n          onChange={(e) => {\r\n            activateGallery(e);\r\n          }}\r\n        />\r\n      </InputGroup>\r\n      {/* <Button\r\n        onClick={() => setShowModalGallery(true)}\r\n        disabled={galleryImages === null}\r\n      >\r\n        Show saved gallery\r\n      </Button>\r\n      <br /> */}\r\n      <Button variant=\"light\" className=\"mt-1\" onClick={showModalInputs}>\r\n        Click here to begin the steps\r\n      </Button>\r\n\r\n      {/* Modal que muestra la cantidad de input files a subir */}\r\n      <Modal\r\n        show={showModalAmountInputs}\r\n        onHide={handleCloseModalAmountInputs}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Formik\r\n          validationSchema={schemaModalAmount}\r\n          onSubmit={RenderInputsGallery}\r\n          initialValues={{\r\n            imagesNumber: \"\",\r\n          }}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            handleChange,\r\n            setFieldValue,\r\n            values,\r\n            touched,\r\n            isValid,\r\n            errors,\r\n          }) => (\r\n            <Form\r\n              onSubmit={handleSubmit}\r\n              noValidate\r\n              autoComplete=\"off\"\r\n              name=\"ModalAmount\"\r\n              id=\"ModalAmount\"\r\n            >\r\n              <Modal.Header>\r\n                <Modal.Title>\r\n                  <Icon.Images className=\"mb-1\" />\r\n                  Set up your gallery\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n\r\n              <Modal.Body>\r\n                <Alert variant=\"info\">\r\n                  <Icon.InfoCircleFill className=\"mb-1\" /> &nbsp; Please enter\r\n                  the number of images in your gallery\r\n                </Alert>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"imagesNumber\"\r\n                  value={values.imagesNumber}\r\n                  onChange={handleChange}\r\n                  isValid={!!touched.imagesNumber && !errors.imagesNumber}\r\n                  isInvalid={!!errors.imagesNumber && !!touched.imagesNumber}\r\n                >\r\n                  <option value=\"\">Choose the number of images...</option>\r\n                  <option value=\"1\">1</option>\r\n                  <option value=\"2\">2</option>\r\n                  <option value=\"3\">3</option>\r\n                  <option value=\"4\">4</option>\r\n                  <option value=\"5\">5</option>\r\n                </Form.Control>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.imagesNumber}\r\n                </Form.Control.Feedback>\r\n              </Modal.Body>\r\n              <Modal.Footer className=\"col-lg-12\">\r\n                <Button\r\n                  variant=\"light\"\r\n                  onClick={() => {\r\n                    handleCloseModalAmountInputs();\r\n                  }}\r\n                >\r\n                  Close\r\n                </Button>\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                  Next step\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Modal>\r\n\r\n      {/* Modal que muestra los input a subir con su respectiva url */}\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        {/* <Formik\r\n          validationSchema={schema}\r\n          onSubmit={saveGallery}\r\n          initialValues={{\r\n            arrayToMapInputs.map((elemento, index) => (\r\n              attachedDocument+elemento:\r\n            ))\r\n          }}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            handleChange,\r\n            setFieldValue,\r\n            values,\r\n            touched,\r\n            isValid,\r\n            errors,\r\n          }) => (\r\n            <Form\r\n              onSubmit={handleSubmit}\r\n              noValidate\r\n              autoComplete=\"off\"\r\n              name=\"addServiceData\"\r\n              id=\"addServiceData\"\r\n            > */}\r\n        <Modal.Header>\r\n          <Modal.Title>\r\n            <Icon.Images className=\"mb-1\" /> Set up your gallery\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n\r\n        {/*<Modal.Body>\r\n          \r\n          <p>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\r\n                  do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                  Ut enim ad minim veniam, quis nostrud exercitation ullamco\r\n                  laboris nisi ut aliquip ex ea commodo consequat. Duis aute\r\n                  irure dolor in reprehenderit in voluptate velit esse cillum\r\n                  dolore eu fugiat nulla pariatur. Excepteur sint occaecat\r\n                  cupidatat non proident, sunt in culpa qui officia deserunt\r\n                  mollit anim id est laborum.\r\n                </p>\r\n          <Form.Group controlId=\"formFileMultiple\">\r\n            {/* <Form.Label>Set up your gallery:</Form.Label>\r\n                        <Form.Control\r\n                          type=\"file\"\r\n                          multiple\r\n                          onChange={(e) => {\r\n                            setGallery(e.target.files);\r\n                          }}\r\n                        />\r\n\r\n            <Form.File custom>\r\n                          <Form.File.Input\r\n                            multiple\r\n                            id=\"attachedDocument\"\r\n                            name=\"attachedDocument\"\r\n                            onChange={(e) => {\r\n                              handleChange(e);\r\n                              setFilesLength(e.target.files.length);\r\n                              setGallery(e.target.files);\r\n                              console.log(e.target.files);\r\n                            }}\r\n                            isValid={\r\n                              !!touched.attachedDocument &&\r\n                              !errors.attachedDocument\r\n                            }\r\n                            // isValid={\r\n                            //   !!touched.attachedDocument && isValidFile === true\r\n                            // }\r\n                            isInvalid={\r\n                              !!touched.attachedDocument &&\r\n                              !!errors.attachedDocument\r\n                            }\r\n                          />\r\n\r\n                          <Form.File.Label data-browse=\"Seleccionar\">\r\n                            {filesLength > 0\r\n                              ? filesLength === 1\r\n                                ? filesLength + \" file selected\"\r\n                                : filesLength + \" files selected\"\r\n                              : \"Select files...\"}\r\n                          </Form.File.Label>\r\n\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            {errors.attachedDocument}\r\n                          </Form.Control.Feedback>\r\n                        </Form.File> \r\n          </Form.Group>\r\n        </Modal.Body>*/}\r\n        <Modal.Body className={amountInputsGallery ? \"\" : \"d-none\"}>\r\n          <Alert variant=\"info\">\r\n            <Icon.InfoCircleFill className=\"mb-1\" /> &nbsp; Select the file in\r\n            the order especified before every button.\r\n          </Alert>\r\n          {arrayToMapInputs.map((elemento, index) => (\r\n            <div key={index}>\r\n              <label>Position {index + 1}</label>\r\n              <InputGroup className=\"mb-1\">\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>\r\n                    <Icon.BoxArrowUpRight />\r\n                  </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Url to open in another tab\"\r\n                  name={\"url\" + index}\r\n                  onChange={(e) => {\r\n                    arrayURLValues[index] = e.target.value;\r\n                  }}\r\n                  // value={\"attachedDocument\" + index}\r\n                  // onChange={handleChange}\r\n                  // isValid={!!touched.email && !errors.email}\r\n                  // isInvalid={!!errors.email && !!touched.email}\r\n                  // className=\"lowercase\"\r\n                />\r\n                {/* <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.email}\r\n                </Form.Control.Feedback> */}\r\n              </InputGroup>\r\n              <input\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  //console.log(e.target.files);\r\n                  arrayInputsValues[index] = e.target.files[0];\r\n                  if (e.target.files.length > 0) {\r\n                    arrayInputsValues[index] = e.target.files[0];\r\n                  } else {\r\n                    arrayInputsValues[index] = new File([\"\"], \"filename\");\r\n                  }\r\n                }}\r\n                name={\"attachedDocument\" + index}\r\n                className=\"mb-2\"\r\n              />\r\n            </div>\r\n          ))}\r\n        </Modal.Body>\r\n        <Modal.Footer className=\"col-lg-12\">\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => {\r\n              handleClose();\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n          <Button\r\n            type=\"button\"\r\n            variant=\"primary\"\r\n            disabled={saveGalleryButton === true}\r\n            onClick={() => {\r\n              saveGallery();\r\n            }}\r\n          >\r\n            <div className=\"d-flex d-inline-block justify-content-center\">\r\n              <span\r\n                className=\"spinner-border spinner-border-sm mt-1 mr-2\"\r\n                role=\"status\"\r\n                style={{\r\n                  display: saveGalleryButton === true ? \"inline-block\" : \"none\",\r\n                }}\r\n                aria-hidden=\"true\"\r\n              ></span>\r\n              {saveGalleryButton === true\r\n                ? \" Loading, please wait...\"\r\n                : \"Save Gallery\"}\r\n            </div>\r\n          </Button>\r\n        </Modal.Footer>\r\n        {/* </Form>\r\n          )}\r\n        </Formik> */}\r\n      </Modal>\r\n\r\n      {/*Modal que muestra la galería que tiene actualmente el cliente*/}\r\n      <Modal\r\n        show={showModalGallery}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>Showing last saved gallery</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Carousel activeIndex={index2} onSelect={handleSelect}>\r\n            {galleryImages.length > 0\r\n              ? galleryImages.map((elemento, index) => (\r\n                  <Carousel.Item key={index}>\r\n                    <img\r\n                      className=\"d-block w-100\"\r\n                      src={`${process.env.REACT_APP_API_URL}/render/image/${elemento.image}`}\r\n                      alt=\"First slide\"\r\n                    />\r\n                  </Carousel.Item>\r\n                ))\r\n              : null}\r\n          </Carousel>\r\n        </Modal.Body>\r\n        <Modal.Footer className=\"col-lg-12\">\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => {\r\n              setShowModalGallery(false);\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GallerySetup;\r\n","C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\EditProfile\\childrenComponents\\ProfileCarousel.js",[],"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\AdvancedTools\\childrenComponents\\CustomImageSetup.js",["407"],"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\UserName\\childrenComponents\\CustomImage.js",["408","409","410"],"C:\\Users\\migue\\Desktop\\Repo\\profileSTDI\\src\\app\\views\\Help\\index.js",["411","412","413","414","415"],{"ruleId":"416","replacedBy":"417"},{"ruleId":"418","replacedBy":"419"},{"ruleId":"420","severity":1,"message":"421","line":7,"column":8,"nodeType":"422","messageId":"423","endLine":7,"endColumn":17},{"ruleId":"420","severity":1,"message":"424","line":42,"column":39,"nodeType":"422","messageId":"423","endLine":42,"endColumn":45},{"ruleId":"420","severity":1,"message":"425","line":4,"column":13,"nodeType":"422","messageId":"423","endLine":4,"endColumn":17},{"ruleId":"420","severity":1,"message":"426","line":38,"column":10,"nodeType":"422","messageId":"423","endLine":38,"endColumn":21},{"ruleId":"420","severity":1,"message":"427","line":39,"column":10,"nodeType":"422","messageId":"423","endLine":39,"endColumn":18},{"ruleId":"420","severity":1,"message":"428","line":40,"column":10,"nodeType":"422","messageId":"423","endLine":40,"endColumn":24},{"ruleId":"420","severity":1,"message":"429","line":55,"column":10,"nodeType":"422","messageId":"423","endLine":55,"endColumn":14},{"ruleId":"420","severity":1,"message":"430","line":57,"column":10,"nodeType":"422","messageId":"423","endLine":57,"endColumn":22},{"ruleId":"420","severity":1,"message":"431","line":58,"column":10,"nodeType":"422","messageId":"423","endLine":58,"endColumn":15},{"ruleId":"420","severity":1,"message":"432","line":66,"column":21,"nodeType":"422","messageId":"423","endLine":66,"endColumn":34},{"ruleId":"433","severity":1,"message":"434","line":589,"column":27,"nodeType":"435","endLine":593,"endColumn":28},{"ruleId":"420","severity":1,"message":"436","line":68,"column":10,"nodeType":"422","messageId":"423","endLine":68,"endColumn":28},{"ruleId":"420","severity":1,"message":"437","line":69,"column":10,"nodeType":"422","messageId":"423","endLine":69,"endColumn":22},{"ruleId":"420","severity":1,"message":"438","line":69,"column":24,"nodeType":"422","messageId":"423","endLine":69,"endColumn":39},{"ruleId":"439","severity":1,"message":"440","line":154,"column":6,"nodeType":"441","endLine":154,"endColumn":8,"suggestions":"442"},{"ruleId":"420","severity":1,"message":"443","line":189,"column":9,"nodeType":"422","messageId":"423","endLine":189,"endColumn":25},{"ruleId":"433","severity":1,"message":"434","line":385,"column":17,"nodeType":"435","endLine":389,"endColumn":18},{"ruleId":"444","severity":1,"message":"445","line":400,"column":19,"nodeType":"435","endLine":400,"endColumn":71},{"ruleId":"444","severity":1,"message":"445","line":9,"column":11,"nodeType":"435","endLine":9,"endColumn":57},{"ruleId":"420","severity":1,"message":"446","line":3,"column":13,"nodeType":"422","messageId":"423","endLine":3,"endColumn":16},{"ruleId":"433","severity":1,"message":"434","line":150,"column":13,"nodeType":"435","endLine":205,"endColumn":14},{"ruleId":"420","severity":1,"message":"447","line":1,"column":20,"nodeType":"422","messageId":"423","endLine":1,"endColumn":30},{"ruleId":"416","replacedBy":"448"},{"ruleId":"418","replacedBy":"449"},{"ruleId":"450","severity":1,"message":"451","line":35,"column":33,"nodeType":"452","messageId":"453","endLine":35,"endColumn":35},{"ruleId":"450","severity":1,"message":"451","line":35,"column":74,"nodeType":"452","messageId":"453","endLine":35,"endColumn":76},{"ruleId":"433","severity":1,"message":"434","line":41,"column":17,"nodeType":"435","endLine":45,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":62,"column":17,"nodeType":"435","endLine":66,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":83,"column":17,"nodeType":"435","endLine":87,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":104,"column":17,"nodeType":"435","endLine":108,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":125,"column":17,"nodeType":"435","endLine":129,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":146,"column":17,"nodeType":"435","endLine":150,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":162,"column":17,"nodeType":"435","endLine":166,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":178,"column":17,"nodeType":"435","endLine":182,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":199,"column":17,"nodeType":"435","endLine":203,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":220,"column":17,"nodeType":"435","endLine":224,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":241,"column":17,"nodeType":"435","endLine":245,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":262,"column":17,"nodeType":"435","endLine":266,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":283,"column":17,"nodeType":"435","endLine":287,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":304,"column":17,"nodeType":"435","endLine":308,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":320,"column":17,"nodeType":"435","endLine":324,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":341,"column":17,"nodeType":"435","endLine":345,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":362,"column":17,"nodeType":"435","endLine":366,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":383,"column":17,"nodeType":"435","endLine":387,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":404,"column":17,"nodeType":"435","endLine":408,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":425,"column":17,"nodeType":"435","endLine":429,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":446,"column":17,"nodeType":"435","endLine":450,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":467,"column":17,"nodeType":"435","endLine":471,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":488,"column":17,"nodeType":"435","endLine":492,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":509,"column":17,"nodeType":"435","endLine":513,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":525,"column":17,"nodeType":"435","endLine":532,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":11,"column":17,"nodeType":"435","endLine":15,"endColumn":18},{"ruleId":"420","severity":1,"message":"454","line":1,"column":17,"nodeType":"422","messageId":"423","endLine":1,"endColumn":25},{"ruleId":"416","replacedBy":"455"},{"ruleId":"418","replacedBy":"456"},{"ruleId":"416","replacedBy":"457"},{"ruleId":"418","replacedBy":"458"},{"ruleId":"420","severity":1,"message":"421","line":7,"column":8,"nodeType":"422","messageId":"423","endLine":7,"endColumn":17},{"ruleId":"420","severity":1,"message":"425","line":4,"column":13,"nodeType":"422","messageId":"423","endLine":4,"endColumn":17},{"ruleId":"420","severity":1,"message":"459","line":17,"column":8,"nodeType":"422","messageId":"423","endLine":17,"endColumn":27},{"ruleId":"420","severity":1,"message":"426","line":36,"column":10,"nodeType":"422","messageId":"423","endLine":36,"endColumn":21},{"ruleId":"420","severity":1,"message":"432","line":63,"column":21,"nodeType":"422","messageId":"423","endLine":63,"endColumn":34},{"ruleId":"433","severity":1,"message":"434","line":588,"column":27,"nodeType":"435","endLine":592,"endColumn":28},{"ruleId":"420","severity":1,"message":"424","line":42,"column":39,"nodeType":"422","messageId":"423","endLine":42,"endColumn":45},{"ruleId":"420","severity":1,"message":"427","line":59,"column":10,"nodeType":"422","messageId":"423","endLine":59,"endColumn":18},{"ruleId":"420","severity":1,"message":"460","line":59,"column":20,"nodeType":"422","messageId":"423","endLine":59,"endColumn":31},{"ruleId":"420","severity":1,"message":"428","line":60,"column":10,"nodeType":"422","messageId":"423","endLine":60,"endColumn":24},{"ruleId":"420","severity":1,"message":"461","line":60,"column":26,"nodeType":"422","messageId":"423","endLine":60,"endColumn":43},{"ruleId":"420","severity":1,"message":"436","line":62,"column":10,"nodeType":"422","messageId":"423","endLine":62,"endColumn":28},{"ruleId":"420","severity":1,"message":"437","line":63,"column":10,"nodeType":"422","messageId":"423","endLine":63,"endColumn":22},{"ruleId":"420","severity":1,"message":"438","line":63,"column":24,"nodeType":"422","messageId":"423","endLine":63,"endColumn":39},{"ruleId":"439","severity":1,"message":"440","line":142,"column":6,"nodeType":"441","endLine":142,"endColumn":8,"suggestions":"462"},{"ruleId":"420","severity":1,"message":"443","line":173,"column":9,"nodeType":"422","messageId":"423","endLine":173,"endColumn":25},{"ruleId":"433","severity":1,"message":"434","line":338,"column":17,"nodeType":"435","endLine":342,"endColumn":18},{"ruleId":"444","severity":1,"message":"445","line":353,"column":19,"nodeType":"435","endLine":353,"endColumn":71},{"ruleId":"444","severity":1,"message":"445","line":9,"column":11,"nodeType":"435","endLine":9,"endColumn":57},{"ruleId":"420","severity":1,"message":"447","line":1,"column":20,"nodeType":"422","messageId":"423","endLine":1,"endColumn":30},{"ruleId":"420","severity":1,"message":"446","line":3,"column":13,"nodeType":"422","messageId":"423","endLine":3,"endColumn":16},{"ruleId":"420","severity":1,"message":"463","line":9,"column":8,"nodeType":"422","messageId":"423","endLine":9,"endColumn":25},{"ruleId":"420","severity":1,"message":"464","line":10,"column":8,"nodeType":"422","messageId":"423","endLine":10,"endColumn":28},{"ruleId":"433","severity":1,"message":"434","line":150,"column":13,"nodeType":"435","endLine":205,"endColumn":14},{"ruleId":"433","severity":1,"message":"434","line":11,"column":17,"nodeType":"435","endLine":15,"endColumn":18},{"ruleId":"450","severity":1,"message":"451","line":35,"column":33,"nodeType":"452","messageId":"453","endLine":35,"endColumn":35},{"ruleId":"450","severity":1,"message":"451","line":35,"column":74,"nodeType":"452","messageId":"453","endLine":35,"endColumn":76},{"ruleId":"433","severity":1,"message":"434","line":41,"column":17,"nodeType":"435","endLine":45,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":62,"column":17,"nodeType":"435","endLine":66,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":83,"column":17,"nodeType":"435","endLine":87,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":104,"column":17,"nodeType":"435","endLine":108,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":125,"column":17,"nodeType":"435","endLine":129,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":146,"column":17,"nodeType":"435","endLine":150,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":162,"column":17,"nodeType":"435","endLine":166,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":178,"column":17,"nodeType":"435","endLine":182,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":199,"column":17,"nodeType":"435","endLine":203,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":220,"column":17,"nodeType":"435","endLine":224,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":241,"column":17,"nodeType":"435","endLine":245,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":262,"column":17,"nodeType":"435","endLine":266,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":283,"column":17,"nodeType":"435","endLine":287,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":304,"column":17,"nodeType":"435","endLine":308,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":320,"column":17,"nodeType":"435","endLine":324,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":341,"column":17,"nodeType":"435","endLine":345,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":362,"column":17,"nodeType":"435","endLine":366,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":383,"column":17,"nodeType":"435","endLine":387,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":404,"column":17,"nodeType":"435","endLine":408,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":425,"column":17,"nodeType":"435","endLine":429,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":446,"column":17,"nodeType":"435","endLine":450,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":467,"column":17,"nodeType":"435","endLine":471,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":488,"column":17,"nodeType":"435","endLine":492,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":509,"column":17,"nodeType":"435","endLine":513,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":525,"column":17,"nodeType":"435","endLine":532,"endColumn":18},{"ruleId":"420","severity":1,"message":"454","line":1,"column":17,"nodeType":"422","messageId":"423","endLine":1,"endColumn":25},{"ruleId":"465","severity":1,"message":"466","line":34,"column":9,"nodeType":"435","endLine":38,"endColumn":10},{"ruleId":"467","severity":1,"message":"468","line":35,"column":16,"nodeType":"469","messageId":"470","endLine":35,"endColumn":36},{"ruleId":"465","severity":1,"message":"466","line":48,"column":9,"nodeType":"435","endLine":48,"endColumn":84},{"ruleId":"467","severity":1,"message":"468","line":48,"column":17,"nodeType":"469","messageId":"470","endLine":48,"endColumn":37},{"ruleId":"465","severity":1,"message":"466","line":53,"column":9,"nodeType":"435","endLine":53,"endColumn":38},{"ruleId":"467","severity":1,"message":"468","line":53,"column":17,"nodeType":"469","messageId":"470","endLine":53,"endColumn":37},{"ruleId":"465","severity":1,"message":"466","line":61,"column":9,"nodeType":"435","endLine":61,"endColumn":38},{"ruleId":"467","severity":1,"message":"468","line":61,"column":17,"nodeType":"469","messageId":"470","endLine":61,"endColumn":37},{"ruleId":"465","severity":1,"message":"466","line":79,"column":9,"nodeType":"435","endLine":85,"endColumn":10},{"ruleId":"467","severity":1,"message":"468","line":80,"column":16,"nodeType":"469","messageId":"470","endLine":80,"endColumn":36},{"ruleId":"420","severity":1,"message":"447","line":1,"column":20,"nodeType":"422","messageId":"423","endLine":1,"endColumn":30},{"ruleId":"465","severity":1,"message":"466","line":89,"column":7,"nodeType":"435","endLine":92,"endColumn":10},{"ruleId":"467","severity":1,"message":"468","line":91,"column":12,"nodeType":"469","messageId":"470","endLine":91,"endColumn":32},{"ruleId":"420","severity":1,"message":"471","line":8,"column":10,"nodeType":"422","messageId":"423","endLine":8,"endColumn":14},{"ruleId":"420","severity":1,"message":"471","line":9,"column":10,"nodeType":"422","messageId":"423","endLine":9,"endColumn":14},{"ruleId":"420","severity":1,"message":"472","line":9,"column":16,"nodeType":"422","messageId":"423","endLine":9,"endColumn":23},{"ruleId":"433","severity":1,"message":"434","line":63,"column":11,"nodeType":"435","endLine":67,"endColumn":12},{"ruleId":"444","severity":1,"message":"445","line":76,"column":13,"nodeType":"435","endLine":76,"endColumn":65},{"ruleId":"465","severity":1,"message":"466","line":28,"column":9,"nodeType":"435","endLine":32,"endColumn":10},{"ruleId":"467","severity":1,"message":"468","line":29,"column":16,"nodeType":"469","messageId":"470","endLine":29,"endColumn":36},{"ruleId":"465","severity":1,"message":"466","line":42,"column":9,"nodeType":"435","endLine":46,"endColumn":10},{"ruleId":"467","severity":1,"message":"468","line":43,"column":16,"nodeType":"469","messageId":"470","endLine":43,"endColumn":36},{"ruleId":"465","severity":1,"message":"466","line":69,"column":9,"nodeType":"435","endLine":73,"endColumn":10},{"ruleId":"467","severity":1,"message":"468","line":70,"column":16,"nodeType":"469","messageId":"470","endLine":70,"endColumn":36},{"ruleId":"465","severity":1,"message":"466","line":86,"column":9,"nodeType":"435","endLine":92,"endColumn":10},{"ruleId":"467","severity":1,"message":"468","line":87,"column":16,"nodeType":"469","messageId":"470","endLine":87,"endColumn":36},{"ruleId":"465","severity":1,"message":"466","line":97,"column":9,"nodeType":"435","endLine":104,"endColumn":10},{"ruleId":"467","severity":1,"message":"468","line":98,"column":16,"nodeType":"469","messageId":"470","endLine":98,"endColumn":36},{"ruleId":"444","severity":1,"message":"445","line":111,"column":11,"nodeType":"435","endLine":111,"endColumn":58},{"ruleId":"420","severity":1,"message":"447","line":1,"column":20,"nodeType":"422","messageId":"423","endLine":1,"endColumn":30},{"ruleId":"465","severity":1,"message":"466","line":89,"column":7,"nodeType":"435","endLine":93,"endColumn":10},{"ruleId":"467","severity":1,"message":"468","line":92,"column":12,"nodeType":"469","messageId":"470","endLine":92,"endColumn":32},{"ruleId":"420","severity":1,"message":"454","line":1,"column":17,"nodeType":"422","messageId":"423","endLine":1,"endColumn":25},{"ruleId":"420","severity":1,"message":"473","line":2,"column":17,"nodeType":"422","messageId":"423","endLine":2,"endColumn":21},{"ruleId":"433","severity":1,"message":"434","line":64,"column":11,"nodeType":"435","endLine":68,"endColumn":12},{"ruleId":"444","severity":1,"message":"445","line":77,"column":13,"nodeType":"435","endLine":77,"endColumn":65},{"ruleId":"439","severity":1,"message":"474","line":72,"column":6,"nodeType":"441","endLine":72,"endColumn":26,"suggestions":"475"},{"ruleId":"420","severity":1,"message":"476","line":22,"column":10,"nodeType":"422","messageId":"423","endLine":22,"endColumn":17},{"ruleId":"439","severity":1,"message":"477","line":58,"column":6,"nodeType":"441","endLine":58,"endColumn":8,"suggestions":"478"},{"ruleId":"479","severity":1,"message":"480","line":209,"column":18,"nodeType":"422","messageId":"481","endLine":209,"endColumn":19},{"ruleId":"439","severity":1,"message":"482","line":68,"column":6,"nodeType":"441","endLine":68,"endColumn":8,"suggestions":"483"},{"ruleId":"420","severity":1,"message":"484","line":2,"column":35,"nodeType":"422","messageId":"423","endLine":2,"endColumn":40},{"ruleId":"420","severity":1,"message":"485","line":3,"column":8,"nodeType":"422","messageId":"423","endLine":3,"endColumn":12},{"ruleId":"420","severity":1,"message":"425","line":4,"column":13,"nodeType":"422","messageId":"423","endLine":4,"endColumn":17},{"ruleId":"420","severity":1,"message":"484","line":2,"column":10,"nodeType":"422","messageId":"423","endLine":2,"endColumn":15},{"ruleId":"420","severity":1,"message":"471","line":9,"column":10,"nodeType":"422","messageId":"423","endLine":9,"endColumn":14},{"ruleId":"420","severity":1,"message":"472","line":9,"column":16,"nodeType":"422","messageId":"423","endLine":9,"endColumn":23},{"ruleId":"433","severity":1,"message":"434","line":67,"column":11,"nodeType":"435","endLine":71,"endColumn":12},{"ruleId":"444","severity":1,"message":"445","line":80,"column":13,"nodeType":"435","endLine":80,"endColumn":65},"no-native-reassign",["486"],"no-negated-in-lhs",["487"],"no-unused-vars","'LogoWhite' is defined but never used.","Identifier","unusedVar","'userid' is assigned a value but never used.","'Icon' is defined but never used.","'profileData' is assigned a value but never used.","'isLinked' is assigned a value but never used.","'usernameLinked' is assigned a value but never used.","'name' is assigned a value but never used.","'serialNumber' is assigned a value but never used.","'email' is assigned a value but never used.","'logoutContext' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'sendNotifications2' is assigned a value but never used.","'emailProfile' is assigned a value but never used.","'setEmailProfile' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'payload'. Either include it or remove the dependency array.","ArrayExpression",["488"],"'viewPrivateLinks' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Yup' is defined but never used.","'useContext' is defined but never used.",["486"],["487"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.",["486"],["487"],["486"],["487"],"'ModalChangePassword' is defined but never used.","'setIsLinked' is assigned a value but never used.","'setUsernameLinked' is assigned a value but never used.",["489"],"'SendNotifications' is defined but never used.","'LinkToAnotherProfile' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'Form' is defined but never used.","React Hook useEffect has missing dependencies: 'objLogin.username' and 'setLinkToExistentProfileContext'. Either include them or remove the dependency array.",["490"],"'gallery' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'objLogin.galleryImages'. Either include it or remove the dependency array.",["491"],"no-redeclare","'x' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'objLogin.customImage'. Either include it or remove the dependency array.",["492"],"'Alert' is defined but never used.","'Swal' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"493","fix":"494"},{"desc":"493","fix":"495"},{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},"Update the dependencies array to be: [payload]",{"range":"502","text":"503"},{"range":"504","text":"503"},"Update the dependencies array to be: [isClicked, isLinked, objLogin.username, setLinkToExistentProfileContext]",{"range":"505","text":"506"},"Update the dependencies array to be: [objLogin.galleryImages]",{"range":"507","text":"508"},"Update the dependencies array to be: [objLogin.customImage]",{"range":"509","text":"510"},[6446,6448],"[payload]",[5859,5861],[2699,2719],"[isClicked, isLinked, objLogin.username, setLinkToExistentProfileContext]",[2346,2348],"[objLogin.galleryImages]",[2824,2826],"[objLogin.customImage]"]